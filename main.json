{
  "$schema": "https://dataexplorer.azure.com/static/d/schema/49/dashboard.json",
  "id": "40e8bded-e837-4149-a8f0-43a3b4cf8900",
  "eTag": "e751a670-4699-49e6-9681-ac6c357c4bcc",
  "schema_version": "49",
  "title": "Kalmin Kustoboard",
  "baseQueries": [
    {
      "id": "215ab200-acdc-4b0d-bad5-6261e7df04b8",
      "dataSource": {
        "kind": "inline",
        "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
      },
      "text": "union \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| project OrgId\n| take 1",
      "usedVariables": [
        "_endTime",
        "_startTime",
        "domainname",
        "envid",
        "geo",
        "orgid"
      ],
      "variableName": "Retrieve org id"
    },
    {
      "id": "391798ce-20a9-46af-abd1-5de00da5cf8e",
      "dataSource": {
        "kind": "inline",
        "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
      },
      "text": "union \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| project OrgId\n| take 1",
      "usedVariables": [
        "_endTime",
        "_startTime",
        "domainname",
        "envid",
        "geo",
        "orgid"
      ],
      "variableName": "Retrieve org id_2"
    }
  ],
  "tiles": [
    {
      "id": "bfdf870f-0df3-497a-bc41-45fecef4dee3",
      "title": "Support orgs",
      "description": "",
      "visualType": "table",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 8,
        "width": 24,
        "height": 7
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "domainname",
          "envid",
          "geo",
          "orgid",
          "ticketid"
        ],
        "text": "//Retrieve support org\nlet clltenantid = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP > ago(1d)\n| where OrgId == orgid or isempty(orgid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| project TenantId, UniqueName\n| take 1\n);\nlet cllfriendlyname = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where OrgId == orgid or isempty(orgid)\n| extend URL = case(\nGeo=='NAM', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| where Geo == geo or isempty(geo)\n| project UniqueName\n| take 1\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TenantId in (clltenantid)\n| where Type == 10\n| where FriendlyName contains ticketid or isempty(ticketid)\n| where FriendlyName has_any (cllfriendlyname)\n| extend URL = case(\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| extend Extend_link = strcat('https://unify-pme.services.dynamics.com/CRM/Environment/ExtendTrialEnvironment?environmentName=',BAPEnvironmentId,'&tenantId=',TenantId)\n| project Geo, Datacenter, DomainName, URL, OrgId, EnvironmentID = BAPEnvironmentId, UniqueName, FriendlyName, Status = case(OrgStatus == 1, \"Enabled\", OrgStatus == 0, \"Disabled\", OrgStatus == 2, \"Pending\", OrgStatus == 3, \"Failed\", \"Maintenance\"), CreatedOn, ExpiryDate, Extend_link\n| summarize ExpiryDate=max(ExpiryDate) by Geo, DomainName, URL, Status, OrgId, UniqueName, EnvironmentID, FriendlyName, CreatedOn, Extend_link\n| project Geo, DomainName, URL, Status, OrgId, UniqueName, EnvironmentID, FriendlyName, CreatedOn, ExpiryDate, Extend_link\n| order by CreatedOn desc  \n\n"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          {
            "urlColumn": "URL",
            "disabled": false,
            "displayColumn": "URL"
          },
          {
            "urlColumn": "Extend_link",
            "disabled": false
          }
        ]
      }
    },
    {
      "id": "8f8b65f1-fa59-4e70-98db-e11229376f4a",
      "title": "Orgs in tenant",
      "description": "",
      "visualType": "table",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 15,
        "width": 24,
        "height": 14
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "let clltenant = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| project TenantId\n| take 1\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where TenantId in (clltenant)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| summarize DisabledOn=max(DisabledOn), ExpiryDate=max(ExpiryDate) by Geo, DomainName, URL, OrgId, BAPEnvironmentId, UniqueName, SecurityGroupGUID, FriendlyName, Type, OrgStatus, IsMultiGeo, IsCDS, StateChangeReason\n| project Geo, DomainName, URL, OrgId, OrgType = case(Type == 0, \"Production\", Type == 4, \"Production\", Type == 11, \"Email Trial\", Type == 5, \"Sandbox\", Type == 6, \"Sandbox\", Type == 10, \"Support instance\", Type == 12, \"Default\", Type == 13, \"Developer\", Type == 14, \"Trial\", Type == 15, \"Teams\", \"NA\"\n), EnvironmentID = BAPEnvironmentId, UniqueName, SecurityGroupGUID, FriendlyName, Status = case(OrgStatus == 1, \"Enabled\", OrgStatus == 0, \"Disabled\", OrgStatus == 2, \"Pending\", OrgStatus == 3, \"Failed\", \"Maintenance\"), IsMultiGeo, IsCDS, StateChangeReason, DisabledDate=iff(DisabledOn>ExpiryDate,DisabledOn,ExpiryDate)"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          {
            "urlColumn": "URL",
            "disabled": false
          }
        ]
      }
    },
    {
      "id": "a68c3c07-30c4-4e21-8b51-5e968746bea0",
      "title": "Count by HTTP status",
      "description": "",
      "visualType": "table",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 5,
        "y": 0,
        "width": 14,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "reqid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrganizationId in (cllgetorginfo)\n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| where * contains reqid or isempty(reqid)\n| extend StatusCode_Meaning = case(\nHttpStatus=='100 Continue', 'The server has received the request headers, and the client should proceed to send the request body',\nHttpStatus=='101 Switching Protocols', 'The server has agreed to switch protocols as requested by the client',\nHttpStatus=='102 Processing', 'The server is still processing the request',\nHttpStatus=='200 OK', 'The request was successful, and the server has returned the requested data',\nHttpStatus=='201 Created', 'The request was successful, and a new resource was created as a result',\nHttpStatus=='204 No Content', 'The server successfully processed the request but is not returning any content',\nHttpStatus=='206 Partial Content', 'The server is delivering only part of the resource due to a range header sent by the client',\nHttpStatus=='300 Multiple Choices', 'Indicates multiple options for the resource from which the client may choose',\nHttpStatus=='301 Moved Permanently', 'Tells the client that the resource has been permanently moved to another location',\nHttpStatus=='302 Found', 'Tells the client that the resource has been temporary moved to another location',\nHttpStatus=='304 Not Modified', 'Indicates that the resource has not been modified since the last request',\nHttpStatus=='307 Temporary Redirect', 'Tells the client that the resource has been temporary moved to another location, but it does not allow the HTTP method to change',\nHttpStatus=='308 Permanent Redirect', 'The request and all future requests should be repeated using another URI',\nHttpStatus=='400 Bad Request', 'Indicates that the server cannot or will not process the request due to a client error',\nHttpStatus=='401 Unauthorized', 'Requires authentication. The request lacks valid authentication credentials',\nHttpStatus=='403 Forbidden', 'The server understood the request, but it refuses to authorize it',\nHttpStatus=='404 Not Found', 'The server cannot find the requested resource',\nHttpStatus=='405 Method Not Allowed', 'The method specified in the request is not allowed for the resource identified by the request URI',\nHttpStatus=='412 Precondition Failed', 'Access to the target resource of this conditional request has been denied. The condition defined by the If-Unmodified-Since or If-None-Match headers is not fulfilled.',\nHttpStatus=='429', 'Too many request, the user has sent too many requests in a given amount of time and the request exceed the API limitation',\nHttpStatus=='500 Internal Server Error', 'A generic error message indicating that an unexpected condition was encountered by the server',\nHttpStatus=='501 Not Implemented', 'The server either does not recognize the request method or lacks the ability to fulfill the request',\nHttpStatus=='503 Service Unavailable', 'The server is not ready to handle the request. Common causes are a server that is down for maintenance or is overloaded',\nHttpStatus=='504 Gateway Timeout', 'The server did not receive a timely response from the upstream server or some other auxiliary server it needed to access in order to complete the request',\nHttpStatus=='505 HTTP Version Not Supported', 'The server does not support the HTTP protocol version that was used in the request',\n'NA')\n| summarize Count=count() by HttpStatus, StatusCode_Meaning\n| project HttpStatus, Count, StatusCode_Meaning\n| order by Count desc "
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": true,
        "drillthroughDisabled": false,
        "crossFilter": [
          {
            "interaction": "column",
            "property": "HttpStatus",
            "disabled": false
          }
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "53d7f41e-0736-4754-9ffd-8b1f07777a59",
      "title": "Total count",
      "description": "Require:\n- Organization ID\n\nFilter:\n- System user ID\n- Agent name: Client who called the API\n- Request ID = Client request ID or Client session ID",
      "visualType": "markdown",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 5,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "reqid"
        ],
        "text": "let formatnumber = (input:long){\nlet number = tostring(input);\nlet lennum1 = strlen(number);\nlet lennum = toint(lennum1);\ncase(\nlennum > 3 and lennum < 7, strcat(substring(number,0,lennum-3),',',substring(number,lennum-3,3)), //xxx,xxx\nlennum > 6 and lennum < 10, strcat(substring(number,0,lennum-6),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx\nlennum > 9 and lennum < 13, strcat(substring(number,0,lennum-9),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx\nlennum > 12 and lennum < 16, strcat(substring(number,0,lennum-12),',',substring(number,lennum-12,3),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx,xxx\nlennum > 15 and lennum < 19, strcat(substring(number,0,lennum-15),',',substring(number,lennum-15,3),',',substring(number,lennum-12,3),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx,xxx,xxx\nnumber)\n};\nlet cllgetorginfo = (\n    ['Retrieve org id']\n);\nlet que1 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrganizationId in (cllgetorginfo)\n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| where * contains reqid or isempty(reqid)\n| summarize TotalCount=count(), Success = countif(HttpStatus startswith '2' or HttpStatus startswith '3'), Redirection = countif(HttpStatus startswith '3'), Failure = countif(HttpStatus startswith '4' or HttpStatus startswith '5'), ClientError = countif(HttpStatus startswith '4'), ServerError = countif(HttpStatus startswith '5')\n| project TotalCount,Success,Redirection,Failure,ClientError,ServerError,merge=1\n);\nlet que2 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where userId contains agentid or isempty(agentid)\n| where throttled == 1 and enabled == 1\n| summarize Throttled_call = count()\n| project Throttled_call, merge=1\n);\nque2\n| join kind=inner que1 on merge\n| project Details = strcat(\n'**Total requests**: ', formatnumber(TotalCount), \n'\\n\\n**Success requests**: ', formatnumber(Success),\n'\\n\\n**Redirection requests**: ', formatnumber(Redirection),\n'\\n\\n**Failures**: ', formatnumber(Failure),\n'\\n\\n**Client Error**: ', formatnumber(ClientError),\n'\\n\\n**Server Error**: ', formatnumber(ServerError),\n'\\n\\n**Throttled requests**: ', formatnumber(Throttled_call)\n)"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "1871dbe4-fcf6-4dbb-8c97-7cef5d77beb3",
      "title": "API server details",
      "description": "",
      "visualType": "markdown",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 19,
        "y": 0,
        "width": 5,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let formatnumber = (input:int){\nlet number = tostring(input);\nlet lennum1 = strlen(number);\nlet lennum = toint(lennum1);\ncase(\nlennum > 3 and lennum < 7, strcat(substring(number,0,lennum-3),',',substring(number,lennum-3,3)), //xxx,xxx\nlennum > 6 and lennum < 10, strcat(substring(number,0,lennum-6),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx\nlennum > 9 and lennum < 13, strcat(substring(number,0,lennum-9),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx\nlennum > 12 and lennum < 16, strcat(substring(number,0,lennum-12),',',substring(number,lennum-12,3),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx,xxx\nlennum > 15 and lennum < 19, strcat(substring(number,0,lennum-15),',',substring(number,lennum-15,3),',',substring(number,lennum-12,3),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx,xxx,xxx\nnumber)\n};\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nlet GetTierByServerCount = (serverCount:int) {toint(toreal(serverCount)/toreal(2));}; \nlet OrgDetails =  \nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrgId in (cllgetorginfo)\n| top 1 by TIMESTAMP \n| project OrganizationId = OrgId, CurrentAPIUnits = TenantAPIUnits,  Domain = DomainName, ExpectedServerCount = GetServerCountByApiUnits(TenantAPIUnits); \nlet WebStats =  \nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| where Headers contains 'x-ms-routing-max-server-count' \n| top 1 by TIMESTAMP \n| extend CurrentServerCount = toint(todynamic(Headers)['x-ms-routing-max-server-count']) \n| project OrganizationId, CurrentServerCount, CurrentWebTier = GetTierByServerCount(CurrentServerCount); \nOrgDetails | join WebStats on OrganizationId \n| extend SROverideExists = iff(CurrentServerCount > ExpectedServerCount, true, false) \n// | project CurrentAPIUnits, CurrentServerCount, CurrentWebTier, ScaleGroupType\n| project Details = strcat(\n'**Allocated API Units**: ', formatnumber(toint(CurrentAPIUnits)), \n'\\n\\n**API Server Count**: ', CurrentServerCount,\n'\\n\\n**API Web Tier**: ', CurrentWebTier)"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "85c720eb-0ac4-4992-a56f-098ed6f426bf",
      "title": "API health",
      "description": "Require:\n- Organization ID\n\nFilter:\n- System user ID\n- Agent name: Client who called the API\n- Request string",
      "visualType": "timechart",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 0,
        "y": 8,
        "width": 24,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "requeststring"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| where Request has requeststring or isempty(requeststring) \n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| summarize Avg_Queuing_Time = avg(QueuingTime), Avg_SDK_Time = avg(SdkTotalMs), Avg_SQL_Time = avg(SqlTotalMs), Avg_SQLConnection_Time = avg(SqlConnectionOpenTotalMs), Avg_Execution_Time = avg(ExecutionTime), RequestCount = count() by bin(TIMESTAMP, 15m)\n| order by TIMESTAMP desc\n| render timechart "
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "88834a63-62c1-4f0c-96a2-d1ecf994c4dc",
      "title": "Burst limit",
      "description": "",
      "visualType": "timechart",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 0,
        "y": 17,
        "width": 8,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where throttleType == 'ApiBurst'\n| where endpointType == 'OData' // OData, SdkService, SandboxListener \n| summarize \n    Burst_pass = max(attempted),\n    Burst_throttled = max(toint(throttled)),\n    Burst_threshold = max(threshold)\n    by bin(TIMESTAMP, totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "871b9040-5bc8-48e4-8647-5bf075b75855",
      "title": "Time limit",
      "description": "",
      "visualType": "timechart",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 8,
        "y": 17,
        "width": 8,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where throttleType == 'TimeUsage'\n| where endpointType == 'OData' // OData, SdkService, SandboxListener \n| summarize \n    Time_limit = max(passed)/60000.0, \n    Time_throttled = max(toint(throttled)),\n    Time_threshold = max(threshold)/60000.0 \n    by bin(TIMESTAMP, totimespan(interval))\n"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "5381cadb-dc23-4373-b6f9-7a22d93c6b1b",
      "title": "Concurrency limit",
      "description": "",
      "visualType": "timechart",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 16,
        "y": 17,
        "width": 8,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ThrottlingUsage\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where throttleType == 'Concurrency'\n| where endpointType == 'OData' // OData, SdkService, SandboxListener \n| summarize \n    Concurency_limit = max(passed),\n    Concurency_throttled = max(toint(throttled)),\n    Concurency_threshold = max(threshold)\n    by bin(TIMESTAMP, totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "99faf2ff-5a5a-4b94-88e5-805de4f93553",
      "title": "Top execution time",
      "description": "Require:\n- Organization ID\n\nFilter:\n- System user ID\n- Agent name: Client who called the API\n- Request string",
      "visualType": "table",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 0,
        "y": 43,
        "width": 24,
        "height": 14
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "requeststring"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| where Request contains requeststring or isempty(requeststring)\n// | where UserAgent == \"CloudSSS\"\n// | where HttpMethod == \"PATCH\"\n// | project TIMESTAMP, RoleInstance, ActivityId, HttpMethod, Request, HttpStatus, EntityTypeCode, EntityName, PageType, QueuingTime, ExecutionTime, MultiOrgCacheLoadTotalMs, DatabaseServiceTotalMs, SqlTotalMs, SqlConnectionOpenTotalMs\n| extend Type=substring(HttpStatus,0,3)\n| top 50 by ExecutionTime\n| project TIMESTAMP, ActivityId, HttpMethod, requestId, Request, HttpStatus, ExecutionTime, UserAgent, SystemUserId, ClientRequestId, ClientSessionId, AADObjectId, Type\n// | order by ExecutionTime desc\n// // | where HttpStatus == \"400 Bad Request\"\n// // | summarize Count=count() by HttpStatus, Request\n// | take 50"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "2d88bed3-27e7-4e5c-9e1d-a722d545be31",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "<",
                "column": "Type",
                "values": [
                  "400"
                ]
              },
              {
                "values": [
                  "200 OK"
                ],
                "operator": "!=",
                "column": "HttpStatus"
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "yellow",
            "tag": "",
            "icon": null,
            "ruleName": ""
          },
          {
            "id": "ef0a1660-d92b-4a38-9450-e1bdb2982eb1",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": ">=",
                "column": "Type",
                "values": [
                  "400"
                ]
              }
            ],
            "chainingOperator": "or",
            "visualType": "table",
            "colorStyle": "light",
            "color": "red",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "01d60c47-4b0c-41f7-9fc1-dea6d2574eff",
      "title": "Find correlation ID from activity ID",
      "description": "Require:\n- Activity ID",
      "visualType": "table",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 19,
        "y": 4,
        "width": 5,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "activityid"
        ],
        "text": "GetCorrelationIdFromActivityIdV1('WebRequestStatistics', activityid)"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "fbea8d6c-34bf-4a3a-82f7-981f75ff2ad5",
      "title": "Org's tables",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Component name = table name",
      "visualType": "table",
      "pageId": "583abcd3-b159-482f-9f8a-349b013b7ceb",
      "layout": {
        "x": 0,
        "y": 8,
        "width": 24,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "tablename"
        ],
        "text": "let TableTypeNameMapping = dynamic(\n{\n    \"AuditBase\" : \"Log\",\n    \"PluginTraceLogBase\" : \"Log\",\n    \"RibbonClientMetadataBase\" : \"File\",\n    \"WebResourceBase\" : \"File\",\n    \"AnnotationBase\" : \"File\",\n    \"Attachment\" : \"File\",\n    \"AsyncOperation\" : \"File\",\n    \"Mailbox\" : \"File\",\n    \"Solution\" : \"File\",\n    \"Microsoft.Athena.TrickleFeedService-Analytics\" : \"File\",\n    \"account-Analytics\" : \"File\",\n    \"activityparty-Analytics\" : \"File\",\n    \"annotation-Analytics\" : \"File\",\n    \"businessunit-Analytics\" : \"File\",\n    \"connection-Analytics\" : \"File\",\n    \"connectionrole-Analytics\" : \"File\",\n    \"contact-Analytics\" : \"File\",\n    \"email-Analytics\" : \"File\",\n    \"lead-Analytics\" : \"File\",\n    \"metric-Analytics\" : \"File\",\n    \"opportunity-Analytics\" : \"File\",\n    \"organization-Analytics\" : \"File\"\n});\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes\n| where OrganizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime.._endTime)\n| where TableName has tablename or isempty(tablename)\n| extend cvttablename = tostring(TableName)\n| extend Tabletype = case(tostring(TableTypeNameMapping[cvttablename]) == \"File\", \"File\",\n                        tostring(TableTypeNameMapping[cvttablename]) == \"Log\", \"Log\",\n                        \"Database\")\n| summarize TableSizeInPages=max(TableSizeInPages), TIMESTAMP=max(TIMESTAMP), NumberOfRows=max(NumberOfRows), IndexSizeInPages=max(IndexSizeInPages), DataSizeInPages=max(DataSizeInPages), FreeSpaceInPages=max(FreeSpaceInPages) by TableName, Tabletype, IsCustomEntity\n| project TIMESTAMP, TableName, IsCustomEntity, Tabletype,\n          NumberOfRows, \n          TableSizeMb = TableSizeInPages * 8.0 / 1024.0, \n          IndexSizeMb = IndexSizeInPages * 8.0 / 1024.0,  \n          DataSizeMb = (DataSizeInPages) * 8.0 / 1024.0,\n          FreeSizeMb = FreeSpaceInPages * 8.0 / 1024.0\n|order by TableSizeMb desc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "c1abf726-08bb-440a-8955-81c732384a57",
      "title": "Table index by table name",
      "description": "",
      "visualType": "table",
      "pageId": "583abcd3-b159-482f-9f8a-349b013b7ceb",
      "layout": {
        "x": 0,
        "y": 19,
        "width": 24,
        "height": 16
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "tablename"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrgIndexSize,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgIndexSize\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| where TableName == tablename\n| order by IndexName, PreciseTimeStamp, IndexSizeKB desc\n| project PreciseTimeStamp, TableName, IndexName, IndexSizeMB = IndexSizeKB / 1024"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "6a0c000b-b450-4aa5-ba44-c217ed57451a",
      "title": "Backlog",
      "description": "",
      "visualType": "timechart",
      "pageId": "081a67ae-5ae1-4b1a-9c6e-30af07b0df15",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 8,
        "height": 7
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id_2']\n);\nunion \ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OrgThroughputCapReset,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgThroughputCapReset\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where Role == \"AsynchronousProcessingService\"\n| where queueName contains \"AsyncOperationQueue\"\n| summarize Threshold=max((orgMaxThroughput)*5) by TIMESTAMP\n| union (\nunion \ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OrgAsyncBacklogDiagnostics,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgAsyncBacklogDiagnostics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| summarize Backlog = avg(['count']) by bin(TIMESTAMP, totimespan(interval))\n)"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "3524545f-0f78-4242-b1ca-e64857147c77",
      "title": "Throughput",
      "description": "",
      "visualType": "timechart",
      "pageId": "081a67ae-5ae1-4b1a-9c6e-30af07b0df15",
      "layout": {
        "x": 8,
        "y": 0,
        "width": 8,
        "height": 7
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id_2']\n);\nunion \ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").AsyncExtendedQoSEvent,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").AsyncExtendedQoSEvent\n| where env_time between (_startTime .. _endTime) \n| where resourceId in (cllgetorginfo)\n| where resultSignature != \"InProgress\"\n| summarize Throughput=dcount(AsyncOperationId), Failure=countif(resultType!=\"Success\") by TIMESTAMP = bin(env_time, totimespan(interval))\n"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "b4095fb1-f962-40d2-b20e-e755babfcc27",
      "title": "Incoming load",
      "description": "",
      "visualType": "timechart",
      "pageId": "081a67ae-5ae1-4b1a-9c6e-30af07b0df15",
      "layout": {
        "x": 16,
        "y": 0,
        "width": 8,
        "height": 7
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id_2']\n);\nunion \ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").AsyncNewOperationAggregation,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").AsyncNewOperationAggregation\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| summarize IncomingLoad = sum(AsyncNewOperationCount) by bin(TIMESTAMP, totimespan(interval))\n"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "e0ec5490-734f-4117-86d8-52e97db7014d",
      "title": "Top Execution",
      "description": "",
      "visualType": "table",
      "pageId": "081a67ae-5ae1-4b1a-9c6e-30af07b0df15",
      "layout": {
        "x": 0,
        "y": 15,
        "width": 24,
        "height": 14
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime"
        ],
        "text": "let AsyncOperationTypeNameMapping = dynamic(\n{\n    \"1\" : \"Event\",\n    \"2\" : \"BulkEmail\",\n    \"3\" : \"Parse\",\n    \"4\" : \"Transform\",\n    \"5\" : \"Import\",\n    \"6\" : \"ActivityPropagation\",\n    \"7\" : \"PublishDuplicateRule\",\n    \"8\" : \"BulkDetectDuplicates\",\n    \"9\" : \"CollectSqmData\",\n    \"10\" : \"Workflow\",\n    \"11\" : \"QuickCampaign\",\n    \"12\" : \"PersistMatchCode\",\n    \"13\" : \"BulkDelete\",\n    \"14\" : \"DeletionService\",\n    \"15\" : \"IndexManagement\",\n    \"16\" : \"CollectOrgStats\",\n    \"17\" : \"ImportingFile\",\n    \"18\" : \"CalculateOrgStorageSize\",\n    \"19\" : \"CollectOrgDBStats\",\n    \"20\" : \"CollectOrgSizeStats\",\n    \"21\" : \"DatabaseTuning\",\n    \"22\" : \"CalculateOrgMaxStorageSize\",\n    \"23\" : \"BulkDeleteChild\",\n    \"24\" : \"UpdateStatisticIntervals\",\n    \"25\" : \"FullTextCatalogIndex\",\n    \"26\" : \"DatabaseLogBackup\",\n    \"27\" : \"UpdateContractStates\",\n    \"28\" : \"ShrinkDatabase\",\n    \"29\" : \"ShrinkLogFile\",\n    \"30\" : \"ReindexAll\",\n    \"31\" : \"StorageLimitNotification\",\n    \"32\" : \"CleanupInactiveWorkflowAssemblies\",\n    \"35\" : \"RecurringSeriesExpansion\",\n    \"38\" : \"ImportSampleData\",\n    \"40\" : \"GoalRollup\",\n    \"41\" : \"AuditPartitionCreation\",\n    \"42\" : \"CheckForLanguagePackUpdates\",\n    \"43\" : \"ProvisionLanguagePack\",\n    \"44\" : \"OrgDBUpdate\",\n    \"45\" : \"SolutionUpdate\",\n    \"46\" : \"RefreshRowCountSnapshots\",\n    \"47\" : \"RefreshReadSharingSnapshots\",\n    \"48\" : \"OptInFcbOrgSync\",\n    \"49\" : \"PostToYammer\",\n    \"50\" : \"OutgoingActivity\",\n    \"51\" : \"IncomingEmailProcessing\",\n    \"52\" : \"MailboxTestAccess\",\n    \"53\" : \"EncryptionHealthCheck\",\n    \"54\" : \"ExecuteSdkMessage\",\n    \"55\" : \"SnapshotIsolationUpdate\",\n    \"56\" : \"UpdateEntitlementStates\",\n    \"57\" : \"IncrementalRollup\",\n    \"58\" : \"BootstrapRollup\",\n    \"59\" : \"ImportTranslations\",\n    \"60\" : \"CleanupOnRollupDelete\",\n    \"61\" : \"CheckFullTextIndexColumnStatus\",\n    \"62\" : \"ConvertDateAndTimeBehavior\",\n    \"63\" : \"EntityKeyIndexCreate\",\n    \"64\" : \"ReadCommittedSnapshotIsolationUpdate\",\n    \"65\" : \"UpdateKnowledgeArticleStates\",\n    \"66\" : \"AddOrgDBOptimization\",\n    \"67\" : \"RemoveOrgDBOptimization\",\n    \"68\" : \"ResourceBookingSync\",\n    \"69\" : \"ActionCardAsync\",\n    \"70\" : \"RefreshRowCountAndReadSharingSnapshots\",\n    \"71\" : \"CleanupSolutionComponentsOperation\",\n    \"72\" : \"AppModuleMetadataOperation\",\n    \"73\" : \"ALMAnomalyDetectionOperation\",\n    \"75\" : \"FlowNotification\",\n    \"76\" : \"RegenerateRibbonClientMetadataOperation\",\n    \"77\" : \"FlowNotificationExpanderOperation\",\n    \"78\" : \"DatabaseCustomQueryOrgOperation\",\n    \"79\" : \"CallbackRegistrationExpanderOperation\",\n    \"80\" : \"AppUpdateOperation\",\n    \"81\" : \"OnDemandAppUpdateOperation\",\n    \"82\" : \"OnDemandOrgDBUpdate\",\n    \"85\" : \"Migrate notes to attachments job\",\n    \"86\" : \"Migrate article content to file storage\",\n    \"87\" : \"Updated Deactived On for Resolved Cases job\",\n    \"90\" : \"CascadeAssignAsyncService\",\n    \"91\" : \"CascadeDeleteAsyncService\",\n    \"92\" : \"EventExpanderOperation\",\n    \"93\" : \"ImportSolutionMetadata\",\n    \"94\" : \"FileAttachmentBulkDelete\",\n    \"98\" : \"Create Or Refresh Virtual Entity\",\n    \"100\" : \"Cascade FlowSession Permissions Async Operation\",\n    \"101\" : \"Update Modern Flow Async Operation\",\n    \"102\" : \"AsyncArchive Async Operation\",\n    \"103\" : \"Cancel Async Operations (System)\",\n    \"202\" : \"Export Solution Async Operation\",\n    \"203\" : \"Import Solution Async Operation\",\n    \"204\" : \"PublishAll Async Operation\",\n    \"207\" : \"DeleteAndPromote Async Operation\",\n    \"208\" : \"UninstallSolution Async Operation\",\n    \"209\" : \"ProvisionLanguage Async Operation\",\n    \"210\" : \"ImportTranslation Async Operation\",\n    \"211\" : \"StageAndUpgrade Async Operation\",\n    \"239\" : \"Denormalization Async Operation\",\n    \"250\" : \"Refresh Runtime Integration Components Async Operation\",\n    \"300\" : \"Bulk Archive Operation\",\n    \"301\" : \"Archive Execution Async Operation\",\n    \"302\" : \"FinOps Deployment Async Operation\",\n    \"304\" : \"Purge Archived Content Operation\",\n    \"305\" : \"Register Offering Async Operation\",\n    \"306\" : \"Execute DataProcessing Configuration\",\n    \"307\" : \"Sync Synapse Tables Schema\",\n    \"308\" : \"FinOps DB Sync Async Operation\",\n    \"309\": \"FinOps Unit Test Async Operation\"\n});\nlet cllgetorginfo = (\n['Retrieve org id_2']\n);\nunion \ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents\n| where env_time between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where activityName == \"Async.ExecuteOperation\"\n| where customDimensions !has \"MailboxQueue\"\n| extend cd = parse_json(customDimensions)\n| extend extensionName = tostring(cd.OwningExtensionName) \n| extend AsyncOperationType = tostring(cd.OperationType)\n| extend AsyncOperationName = tostring(AsyncOperationTypeNameMapping[AsyncOperationType])\n| summarize executionCount=count(), Avg_durationMs = avg(durationMs), Total_durationMs = sum(durationMs), P50_durationMs = percentile(durationMs,50), P95_durationMs = percentile(durationMs,95) by AsyncOperationName, extensionName\n| top 20 by executionCount"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "7df9323a-5062-4f66-823e-6e916cad8442",
      "title": "Near-realtime async load",
      "description": "",
      "visualType": "timechart",
      "pageId": "081a67ae-5ae1-4b1a-9c6e-30af07b0df15",
      "layout": {
        "x": 0,
        "y": 7,
        "width": 24,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id_2']\n);\nunion \ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OrgThroughputCapReset,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgThroughputCapReset\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where Role == \"AsynchronousProcessingService\"\n| where queueName contains \"AsyncOperationQueue\"\n| summarize Current_load=percentile(orgCurrentThroughput, 95), Maxthroughput=max(orgMaxThroughput) by bin(TIMESTAMP, totimespan(interval))\n| render timechart "
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "7f07bc6f-aca1-45d0-940c-e6b6efcce0a5",
      "title": "Failures",
      "description": "Require:\n- Organization ID\n\nFilter:\n- System user ID\n- Agent name: Client who called the API\n- Request string",
      "visualType": "table",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 0,
        "y": 69,
        "width": 15,
        "height": 14
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "requeststring"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| extend Type=substring(HttpStatus,0,3)\n| where toint(Type) >= 400\n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| where Request contains requeststring or isempty(requeststring)\n// | where UserAgent == \"CloudSSS\"\n// | where HttpMethod == \"PATCH\"\n// | project TIMESTAMP, RoleInstance, ActivityId, HttpMethod, Request, HttpStatus, EntityTypeCode, EntityName, PageType, QueuingTime, ExecutionTime, MultiOrgCacheLoadTotalMs, DatabaseServiceTotalMs, SqlTotalMs, SqlConnectionOpenTotalMs\n| project TIMESTAMP, ActivityId, HttpMethod, requestId, Request, HttpStatus, ExecutionTime, UserAgent, SystemUserId, ClientRequestId, ClientSessionId, AADObjectId\n// | where HttpStatus == \"400 Bad Request\"\n// | summarize Count=count() by HttpStatus, Request\n| order by TIMESTAMP desc \n| take 50"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "472c09cd-a203-4873-b17d-b43e8d50ac90",
      "title": "Failure count",
      "description": "Require:\n- Organization ID\n\nFilter:\n- System user ID\n- Agent name: Client who called the API\n- Request string",
      "visualType": "table",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 15,
        "y": 69,
        "width": 9,
        "height": 14
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "requeststring"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| extend Type=substring(HttpStatus,0,3)\n| where toint(Type) >= 400\n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| where Request contains requeststring or isempty(requeststring)\n// | where UserAgent == \"CloudSSS\"\n// | where HttpMethod == \"PATCH\"\n// | project TIMESTAMP, RoleInstance, ActivityId, HttpMethod, Request, HttpStatus, EntityTypeCode, EntityName, PageType, QueuingTime, ExecutionTime, MultiOrgCacheLoadTotalMs, DatabaseServiceTotalMs, SqlTotalMs, SqlConnectionOpenTotalMs\n| project TIMESTAMP, ActivityId, HttpMethod, requestId, Request, HttpStatus, ExecutionTime, UserAgent, SystemUserId, ClientRequestId, ClientSessionId, AADObjectId\n// | where HttpStatus == \"400 Bad Request\"\n| summarize Count=count() by HttpStatus, Request\n| order by Count"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "726e943b-cb4f-4b38-ab1d-2562214990c9",
      "title": "Failure details",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Plugin type name",
      "visualType": "table",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 30,
        "width": 24,
        "height": 13
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "plugintypename"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n//| where exceptionSource contains \"Plugin secure configuration\"\n//| where assemblyName contains \"SyncMusicMain\"\n//| where exceptionSource contains \"PluginExecution\"\n| where typeName contains plugintypename or isempty(plugintypename)\n| where component == \"Sandbox Client\"\n| where perceivedPassed == 0 // These are failed plugin executions. \n// | where perceivedPassed != 2 // Ignored because these errors are retried by platform and does not impact and not visible to customer.\n// | where perceivedPassed == 1 // These are ignored because these are successful executions. \n// | where exceptionSource == \"PluginTimeout\"\n| summarize by executionId, TIMESTAMP, assemblyName, typeName, ActivityId, requestId, originalException, errorCode, exceptionSource, fabricHostName, Executiontime = strcat(executionTime_string1,executionTime_string)\n| project TIMESTAMP, assemblyName, typeName, ActivityId, requestId, executionId, originalException, errorCode, exceptionSource, fabricHostName, Executiontime"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "5f70daee-5905-4f95-80e8-c96d2897551d",
      "title": "Execution count",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Plugin type name",
      "visualType": "markdown",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 10,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "plugintypename"
        ],
        "text": "let formatnumber = (input:long){\nlet number = tostring(input);\nlet lennum1 = strlen(number);\nlet lennum = toint(lennum1);\ncase(\nlennum > 3 and lennum < 7, strcat(substring(number,0,lennum-3),',',substring(number,lennum-3,3)), //xxx,xxx\nlennum > 6 and lennum < 10, strcat(substring(number,0,lennum-6),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx\nlennum > 9 and lennum < 13, strcat(substring(number,0,lennum-9),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx\nlennum > 12 and lennum < 16, strcat(substring(number,0,lennum-12),',',substring(number,lennum-12,3),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx,xxx\nlennum > 15 and lennum < 19, strcat(substring(number,0,lennum-15),',',substring(number,lennum-15,3),',',substring(number,lennum-12,3),',',substring(number,lennum-9,3),',',substring(number,lennum-6,3),',',substring(number,lennum-3,3)), //xxx,xxx,xxx,xxx,xxx,xxx\nnumber)\n};\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where typeName contains plugintypename or isempty(plugintypename)\n| where component == \"Sandbox Client\" \n| where perceivedPassed != 2\n| summarize by executionId, assemblyName, typeName, perceivedPassed\n|summarize TotalCount = count(), SuccessCount = countif(perceivedPassed==1),FailureCount = countif(perceivedPassed==0),FailurePrecentage = round(todouble((countif(perceivedPassed==0)*100))/count(),2)\n| project Details = strcat(\n'**Total execution**: ', formatnumber(TotalCount), \n'\\n\\n**Success**: ', formatnumber(SuccessCount),\n'\\n\\n**Failure**: ', formatnumber(FailureCount),\n'\\n\\n**Failure Precentage**: ', FailurePrecentage\n)"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "2891b529-d41a-4a0e-b53c-e396323af34c",
      "title": "Sandbox health",
      "description": "Filter:\n- Type name",
      "visualType": "timechart",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 20,
        "width": 12,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval",
          "plugintypename"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where typeName contains plugintypename or isempty(plugintypename)\n| where component == \"Sandbox Client\" \n| where perceivedPassed != 2\n| extend executionTimeMs = toint(strcat(executionTime_string,executionTime_string1))\n| summarize by executionId, assemblyName, typeName, exceptionSource, perceivedPassed, executionTimeMs, TIMESTAMP\n|summarize TotalCount = count(), SuccessCount = countif(perceivedPassed==1), FailureCount = countif(perceivedPassed==0), RetryCount = countif(perceivedPassed==2), SystemErrorCount = countif(perceivedPassed==0 and exceptionSource !in (\"PluginExecution\", \"SdkClient\")), Avg_Execution_time_ms = toint(avg(executionTimeMs)) by bin(TIMESTAMP, totimespan(interval)) "
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "591867fd-1927-427f-be6c-abefaaa3550b",
      "title": "SandboxFabricGrpcChannel and SandboxSDKListenerActivity",
      "description": "",
      "visualType": "timechart",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 55,
        "width": 12,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id_2']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents)\n where env_time  between  (_startTime.._endTime)\n| where organizationId in (cllgetorginfo)\n| where activityName in('SandboxSDKListenerActivity',\"SandboxFabricGrpcChannel\")\n| where resultType == \"Failure\"\n| project env_time, Roleinstance=env_cloud_roleInstance, activityName ,activityVector,resultType,durationMs,customDimensions\n| summarize SandboxSDKListenerActivity=countif(activityName=='SandboxSDKListenerActivity'), SandboxFabricGrpcChannel=countif(activityName=='SandboxFabricGrpcChannel') by bin(env_time, totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "2ac1727b-ac55-4eca-94a0-ecd1ae31b4d6",
      "title": "Async Enqueue",
      "description": "",
      "visualType": "timechart",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 12,
        "y": 55,
        "width": 12,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id_2']\n);\nunion \ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents\n| where env_time between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where activityName == \"Async.Enqueue\"\n| summarize percentiles(durationMs, 50, 90, 99) by bin(env_time,totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "45743cab-0f6d-47e3-ae0b-49356acd38e6",
      "title": "Execution time by correlation ID (contains fdisland)",
      "description": "Require:\n- Organization ID\n- Correlation ID",
      "visualType": "table",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 65,
        "width": 7,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "corrid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsas.southeastasia.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsau.australiaeast.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandseu.westeurope.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsus.centralus.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsbr.brazilsouth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsin.centralindia.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsfr.francecentral.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsjp.japaneast.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsuk.uksouth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsza.southafricanorth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsde.germanywestcentral.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents,\ncluster(\"https://fdislandsae.uaenorth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents, TraceEvents, CommunicationEvents\n| where env_time between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where correlationId == corrid\n| extend CD = todynamic(customDimensions)\n| extend typeName = iif(isempty(CD.typeName),tostring(CD.pluginTypeName), tostring(CD.typeName))\n| extend targetEnttiyRecordId = tostring(CD.targetEntityRecordId)\n| extend sdkMessage = tostring(CD.message)\n| extend parentOTC = iif(isempty(tostring(CD.parentOTC)), tostring(CD.ParentOTC), tostring(CD.parentOTC))\n| extend primaryEntityName = iif(isempty(tostring(CD.primaryEntityName)), tostring(CD.primaryEntityLogicalName), tostring(CD.primaryEntityName))\n| extend messageName = iif(isempty(tostring(CD.messageName)), tostring(CD.messageName), tostring(CD.messageName))\n| extend AsyncJobName = iif(isempty(tostring(CD.OwningExtensionName)), tostring(CD.OwningExtensionName), tostring(CD.OwningExtensionName))\n| where activityName == \"SandboxFabricHost.SdkListenerActivity\"\n| project env_time, correlationId, serviceRequestId, traceLevel, resultType, durationMs = iif(isempty(durationMs_long),tolong(durationMs_uint),durationMs_long), eventType, activityKind, activityName , sdkMessage,  activityVector, typeName, parentOTC, primaryEntityName, targetEnttiyRecordId, message, customDimensions\n| summarize count(), sum(durationMs) by sdkMessage"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "b2b6d29d-5c83-4f41-bcde-f672e6ba6612",
      "title": "Activity timeline by request ID",
      "description": "Require:\n- Organization ID\n- Request ID",
      "visualType": "table",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 7,
        "y": 65,
        "width": 17,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "reqid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents)\n where env_time  between  (_startTime.._endTime)\n| where organizationId in (cllgetorginfo)\n| where serviceRequestId== reqid\n| project env_time,Roleinstance=env_cloud_roleInstance, activityName,activityVector,resultType,durationMs,customDimensions"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "228f33c2-3636-4f74-91e9-61dd84a816bf",
      "title": "Plugin execution details",
      "description": "Require:\n- Organization ID\n- Execution ID",
      "visualType": "table",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 4,
        "width": 10,
        "height": 7
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_startTime",
          "execuid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nlet  cllorg = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where OrgId in (cllgetorginfo)\n| project ScaleGroupId\n| take 1\n);\nlet cllscid = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ScalegroupDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ScalegroupDetails\n| where Id in (cllorg)\n| project ScaleGroup\n| take 1\n);\nSandboxGrpcExecutionStats(_startTime - 1h, _startTime + 1h, toscalar(cllscid))\n| where executionId == execuid\n| project-reorder correlationId, executionId, pluginTypeName, grpcActiveRequestsCount, grpcSessionOpenTime, grpcInitialRequestWriteTime, assemblyLoadTime, sdkTime, noOfSdkCalls, grpcTotalTime, activityTime, hostExecutionTime, hostCallbackTime, pluginExecuteOverheadTime, sdkCallbackOverheadTime\n"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "3b22372f-f806-4d1d-a103-7d23664c6535",
      "title": "DB Tier info",
      "description": "",
      "visualType": "table",
      "pageId": "583abcd3-b159-482f-9f8a-349b013b7ceb",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 24,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id"
        ],
        "text": "let cllgetorginfo = (\r\n['Retrieve org id']\r\n);\r\nunion \r\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetOrgDBTierInfo(toscalar(cllgetorginfo)),\r\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").GetOrgDBTierInfo(toscalar(cllgetorginfo))"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "ff534a25-d7f2-43b3-9351-91de887b0ef9",
      "title": "File (MB)",
      "description": "",
      "visualType": "table",
      "pageId": "583abcd3-b159-482f-9f8a-349b013b7ceb",
      "layout": {
        "x": 8,
        "y": 4,
        "width": 8,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let TableTypeNameMapping = dynamic(\n{\n    \"AuditBase\" : \"Log\",\n    \"PluginTraceLogBase\" : \"Log\",\n    \"RibbonClientMetadataBase\" : \"File\",\n    \"WebResourceBase\" : \"File\",\n    \"AnnotationBase\" : \"File\",\n    \"Attachment\" : \"File\",\n    \"AsyncOperation\" : \"File\",\n    \"Mailbox\" : \"File\",\n    \"Solution\" : \"File\",\n    \"Microsoft.Athena.TrickleFeedService-Analytics\" : \"File\",\n    \"account-Analytics\" : \"File\",\n    \"activityparty-Analytics\" : \"File\",\n    \"annotation-Analytics\" : \"File\",\n    \"businessunit-Analytics\" : \"File\",\n    \"connection-Analytics\" : \"File\",\n    \"connectionrole-Analytics\" : \"File\",\n    \"contact-Analytics\" : \"File\",\n    \"email-Analytics\" : \"File\",\n    \"lead-Analytics\" : \"File\",\n    \"metric-Analytics\" : \"File\",\n    \"opportunity-Analytics\" : \"File\",\n    \"organization-Analytics\" : \"File\"\n});\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes\n| where OrganizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime.._endTime)\n| extend cvttablename = tostring(TableName)\n| extend Tabletype = case(tostring(TableTypeNameMapping[cvttablename]) == \"File\", \"File\",\n                        tostring(TableTypeNameMapping[cvttablename]) == \"Log\", \"Log\",\n                        \"Data\")\n| summarize File_tablesizesize = sumif((TableSizeInPages * 8.0 / 1024.0), Tabletype == \"File\"), File_datasize = sumif((DataSizeInPages * 8.0 / 1024.0), Tabletype == \"File\"), File_indexsize = sumif((IndexSizeInPages * 8.0 / 1024.0), Tabletype == \"File\")"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "90082297-487c-41a0-a41c-9aa66f15d52e",
      "title": "Database (MB)",
      "description": "",
      "visualType": "table",
      "pageId": "583abcd3-b159-482f-9f8a-349b013b7ceb",
      "layout": {
        "x": 0,
        "y": 4,
        "width": 8,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let TableTypeNameMapping = dynamic(\n{\n    \"AuditBase\" : \"Log\",\n    \"PluginTraceLogBase\" : \"Log\",\n    \"RibbonClientMetadataBase\" : \"File\",\n    \"WebResourceBase\" : \"File\",\n    \"AnnotationBase\" : \"File\",\n    \"Attachment\" : \"File\",\n    \"AsyncOperation\" : \"File\",\n    \"Mailbox\" : \"File\",\n    \"Solution\" : \"File\",\n    \"Microsoft.Athena.TrickleFeedService-Analytics\" : \"File\",\n    \"account-Analytics\" : \"File\",\n    \"activityparty-Analytics\" : \"File\",\n    \"annotation-Analytics\" : \"File\",\n    \"businessunit-Analytics\" : \"File\",\n    \"connection-Analytics\" : \"File\",\n    \"connectionrole-Analytics\" : \"File\",\n    \"contact-Analytics\" : \"File\",\n    \"email-Analytics\" : \"File\",\n    \"lead-Analytics\" : \"File\",\n    \"metric-Analytics\" : \"File\",\n    \"opportunity-Analytics\" : \"File\",\n    \"organization-Analytics\" : \"File\"\n});\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes\n| where OrganizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime.._endTime)\n| extend cvttablename = tostring(TableName)\n| extend Tabletype = case(tostring(TableTypeNameMapping[cvttablename]) == \"File\", \"File\",\n                        tostring(TableTypeNameMapping[cvttablename]) == \"Log\", \"Log\",\n                        \"Data\")\n| summarize Data_tablesize = sumif((TableSizeInPages * 8.0 / 1024.0), Tabletype == \"Data\"), Data_datasize = sumif((DataSizeInPages * 8.0 / 1024.0), Tabletype == \"Data\"), Data_indexsize = sumif((IndexSizeInPages * 8.0 / 1024.0), Tabletype == \"Data\")"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "3a126083-d899-4b09-aa96-686d3c3c85b6",
      "title": "Log (MB)",
      "description": "",
      "visualType": "table",
      "pageId": "583abcd3-b159-482f-9f8a-349b013b7ceb",
      "layout": {
        "x": 16,
        "y": 4,
        "width": 8,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let TableTypeNameMapping = dynamic(\n{\n    \"AuditBase\" : \"Log\",\n    \"PluginTraceLogBase\" : \"Log\",\n    \"RibbonClientMetadataBase\" : \"File\",\n    \"WebResourceBase\" : \"File\",\n    \"AnnotationBase\" : \"File\",\n    \"Attachment\" : \"File\",\n    \"AsyncOperation\" : \"File\",\n    \"Mailbox\" : \"File\",\n    \"Solution\" : \"File\",\n    \"Microsoft.Athena.TrickleFeedService-Analytics\" : \"File\",\n    \"account-Analytics\" : \"File\",\n    \"activityparty-Analytics\" : \"File\",\n    \"annotation-Analytics\" : \"File\",\n    \"businessunit-Analytics\" : \"File\",\n    \"connection-Analytics\" : \"File\",\n    \"connectionrole-Analytics\" : \"File\",\n    \"contact-Analytics\" : \"File\",\n    \"email-Analytics\" : \"File\",\n    \"lead-Analytics\" : \"File\",\n    \"metric-Analytics\" : \"File\",\n    \"opportunity-Analytics\" : \"File\",\n    \"organization-Analytics\" : \"File\"\n});\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgTableSizes\n| where OrganizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime.._endTime)\n| extend cvttablename = tostring(TableName)\n| extend Tabletype = case(tostring(TableTypeNameMapping[cvttablename]) == \"File\", \"File\",\n                        tostring(TableTypeNameMapping[cvttablename]) == \"Log\", \"Log\",\n                        \"Data\")\n| summarize Log_tablesize = sumif((TableSizeInPages * 8.0 / 1024.0), Tabletype == \"Log\"), Log_datasize = sumif((DataSizeInPages * 8.0 / 1024.0), Tabletype == \"Log\"), Log_indexsize = sumif((IndexSizeInPages * 8.0 / 1024.0), Tabletype == \"Log\")"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "3c4447cc-bffe-423c-9567-2e973d0e5113",
      "title": "Solution operation event",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Solution name\n- Solution ID",
      "visualType": "table",
      "pageId": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
      "layout": {
        "x": 0,
        "y": 10,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "solutionid",
          "solutionname"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionOperation_WithUserAgent(_startTime, _endTime, toscalar(cllgetorginfo)),\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionOperation_WithUserAgent(_startTime, _endTime, toscalar(cllgetorginfo)),\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionOperation_WithUserAgent(_startTime, _endTime, toscalar(cllgetorginfo)),\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionOperation_WithUserAgent(_startTime, _endTime, toscalar(cllgetorginfo))\n| where solutionName contains solutionname or isempty(solutionname)\n| where solutionId contains solutionid or isempty(solutionid)\n| summarize by operation, start, TIMESTAMPs=end, solutionName, solutionId, result, executionTime, ActivityId, error=substring(error, 0, 200), Role\n| project operation, start, TIMESTAMPs, solutionName, solutionId, result, executionTime, ActivityId, error, Role\n| order by TIMESTAMPs desc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "ddaa8bd2-5891-4282-9c78-d3cb6e4e51a7",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "==",
                "column": "result",
                "values": [
                  "Failure"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "red",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "484aaf23-1773-4113-8224-f7764957b530",
      "title": "Installed solution",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Solution name\n- Solution ID",
      "visualType": "table",
      "pageId": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "solutionid",
          "solutionname"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrgSolutionsInstalled,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgSolutionsInstalled\n| where OrganizationId in (cllgetorginfo)\n| where SolutionUniqueName contains solutionname or isempty(solutionname)\n| where SolutionId == solutionid or isempty(solutionid)\n| summarize ModifiedOn=max(ModifiedOn), SolutionVersion=max(SolutionVersion), PublisherName=max(PublisherName) by CreatedOn, SolutionUniqueName, SolutionId, SolutionFriendlyName, SolutionParentSolutionId, IsManaged, PublisherId\n| project CreatedOn, ModifiedOn, SolutionUniqueName, SolutionId, IsManaged, SolutionFriendlyName, SolutionVersion, PublisherName, PublisherId, SolutionParentSolutionId\n// | summarize ModifiedOn=max(ModifiedOn) ,  SolutionVersion=max(SolutionVersion)by PublisherName, CreatedOn, SolutionUniqueName, SolutionId, SolutionFriendlyName, SolutionParentSolutionId, IsManaged, PublisherId\n// | project CreatedOn, ModifiedOn, SolutionUniqueName, SolutionId, IsManaged, SolutionFriendlyName, SolutionVersion, PublisherName, PublisherId, SolutionParentSolutionId"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "286051aa-4c55-45e8-ac25-00c199158dbc",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "==",
                "column": "IsManaged",
                "values": [
                  "false"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "green",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "0c3fef98-df2f-4952-948d-a0e05d50dcb6",
      "title": "Failure details",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Solution name",
      "visualType": "table",
      "pageId": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
      "layout": {
        "x": 0,
        "y": 20,
        "width": 24,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "solutionname"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionImport,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionImport,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionImport,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionImport\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where solutionName == solutionname or isempty(solutionname)\n| where hasImportFailed == true\n| summarize by Operation=requestName, TIMESTAMP, importException, errorCode, errorCategory, errorSubcategory, ActivityId, requestId, correlationId, userId, executionTime\n// | order by TIMESTAMP desc\n| union (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionExport,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionExport,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionExport,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionExport\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where solutionName == solutionname or isempty(solutionname)\n| where hasExportFailed == true\n| summarize by Operation=TaskName, TIMESTAMP, exportException, errorCode, ActivityId, requestId, correlationId, userId, executionTime\n// | order by TIMESTAMP desc\n) | union (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionUninstall,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionUninstall,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionUninstall,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionUninstall\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where solutionName == solutionname or isempty(solutionname)\n| where isSuccess == false\n| summarize by Operation=TaskName, TIMESTAMP, exceptionMessage, errorCode, ActivityId, requestId, correlationId, userId, executionTime\n// | order by TIMESTAMP desc\n) | union (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").PublishCustomization,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").PublishCustomization,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").PublishCustomization,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").PublishCustomization\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where isSuccessful == false\n| summarize by Operation=TaskName, TIMESTAMP, ActivityId, publishType, exception, EventMessage, userId, executionTime\n// | order by TIMESTAMP desc\n)\n| project Operation, TIMESTAMP, ActivityId, Error = strcat(importException,exportException,exceptionMessage,exception, EventMessage), errorCode, errorCategory, errorSubcategory, requestId, publishType, correlationId, userId, executionTime\n| order by TIMESTAMP desc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "befbfc84-f8e2-4bff-a56b-eda50235ddeb",
      "title": "Find component",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Solution name\n- Solution ID\n- Object ID\n- Component name\n- Component type name\n- Component type code",
      "visualType": "table",
      "pageId": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
      "layout": {
        "x": 0,
        "y": 29,
        "width": 24,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "compname",
          "comptype",
          "comptypecode",
          "obid",
          "solutionid",
          "solutionname"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponentInfo,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponentInfo\n| where OrganizationId in (cllgetorginfo)\n| where ObjectId contains obid or isempty(obid)\n| where ComponentName contains compname or isempty(compname)\n| where BaseSolutionName contains solutionname or isempty(solutionname)\n| where BaseSolutionId contains solutionid or isempty(solutionid)\n| where ComponentTypeName == comptype or isempty(comptype)\n| where ComponentType == comptypecode or isempty(comptypecode)\n| summarize by ComponentName, ObjectId, ComponentTypeName, ComponentType, BaseSolutionName, BaseSolutionId, TopSolutionName, TopSolutionId\n| union (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponents\n| where OrganizationId in (cllgetorginfo)\n| where ObjectId contains obid or isempty(obid)\n| where SolutionId contains solutionid or isempty(solutionid)\n| summarize by ObjectId, ComponentType = case(\nComponentType == 1, 'Entity',\nComponentType == 2, 'Attribute',\nComponentType == 3, 'Relationship',\nComponentType == 4, 'AttributePicklistValue',\nComponentType == 5, 'AttributeLookupValue',\nComponentType == 6, 'ViewAttribute',\nComponentType == 7, 'LocalizedLabel',\nComponentType == 8, 'RelationshipExtraCondition',\nComponentType == 9, 'OptionSet',\nComponentType == 10, 'EntityRelationship',\nComponentType == 11, 'EntityRelationshipRole',\nComponentType == 12, 'EntityRelationshipRelationships',\nComponentType == 13, 'ManagedProperty',\nComponentType == 14, 'EntityKey',\nComponentType == 16, 'Privilege',\nComponentType == 17, 'PrivilegeObjectTypeCode',\nComponentType == 20, 'Role',\nComponentType == 21, 'RolePrivilege',\nComponentType == 22, 'DisplayString',\nComponentType == 23, 'DisplayStringMap',\nComponentType == 24, 'Form',\nComponentType == 25, 'Organization',\nComponentType == 26, 'SavedQuery',\nComponentType == 29, 'Workflow',\nComponentType == 31, 'Report',\nComponentType == 32, 'ReportEntity',\nComponentType == 33, 'ReportCategory',\nComponentType == 34, 'ReportVisibility',\nComponentType == 35, 'Attachment',\nComponentType == 36, 'EmailTemplate',\nComponentType == 37, 'ContractTemplate',\nComponentType == 38, 'KBArticleTemplate',\nComponentType == 39, 'MailMergeTemplate',\nComponentType == 44, 'DuplicateRule',\nComponentType == 45, 'DuplicateRuleCondition',\nComponentType == 46, 'EntityMap',\nComponentType == 47, 'AttributeMap',\nComponentType == 48, 'RibbonCommand',\nComponentType == 49, 'RibbonContextGroup',\nComponentType == 50, 'RibbonCustomization',\nComponentType == 52, 'RibbonRule',\nComponentType == 53, 'RibbonTabToCommandMap',\nComponentType == 55, 'RibbonDiff',\nComponentType == 59, 'SavedQueryVisualization',\nComponentType == 60, 'SystemForm',\nComponentType == 61, 'WebResource',\nComponentType == 62, 'SiteMap',\nComponentType == 63, 'ConnectionRole',\nComponentType == 64, 'ComplexControl',\nComponentType == 70, 'FieldSecurityProfile',\nComponentType == 71, 'FieldPermission',\nComponentType == 90, 'PluginType',\nComponentType == 91, 'PluginAssembly',\nComponentType == 92, 'SDKMessageProcessingStep',\nComponentType == 93, 'SDKMessageProcessingStepImage',\nComponentType == 95, 'ServiceEndpoint',\nComponentType == 150, 'RoutingRule',\nComponentType == 151, 'RoutingRuleItem',\nComponentType == 152, 'SLA',\nComponentType == 153, 'SLAItem',\nComponentType == 154, 'ConvertRule',\nComponentType == 155, 'ConvertRuleItem',\nComponentType == 65, 'HierarchyRule',\nComponentType == 161, 'MobileOfflineProfile',\nComponentType == 162, 'MobileOfflineProfileItem',\nComponentType == 165, 'SimilarityRule',\nComponentType == 66, 'CustomControl',\nComponentType == 68, 'CustomControlDefaultConfig',\nComponentType == 166, 'DataSourceMapping',\nComponentType == 201, 'SDKMessage',\nComponentType == 202, 'SDKMessageFilter',\nComponentType == 203, 'SdkMessagePair',\nComponentType == 204, 'SdkMessageRequest',\nComponentType == 205, 'SdkMessageRequestField',\nComponentType == 206, 'SdkMessageResponse',\nComponentType == 207, 'SdkMessageResponseField',\nComponentType == 210, 'WebWizard',\nComponentType == 18, 'Index',\nComponentType == 208, 'ImportMap',\nComponentType == 300, 'CanvasApp',\nComponentType == 371, 'Connector',\nComponentType == 372, 'Connector',\nComponentType == 380, 'EnvironmentVariableDefinition',\nComponentType == 381, 'EnvironmentVariableValue',\nComponentType == 400, 'AIProjectType',\nComponentType == 401, 'AIProject',\nComponentType == 402, 'AIConfiguration',\nComponentType == 430, 'EntityAnalyticsConfiguration',\nComponentType == 431, 'AttributeImageConfiguration',\nComponentType == 432, 'EntityImageConfiguration','NA')\n, SolutionId\n| where ComponentType == comptype or isempty(comptype)\n)\n| extend ComponentTypeName = strcat(ComponentTypeName,ComponentType_string)\n| extend SolutionID = strcat(BaseSolutionId,SolutionId)\n| project ComponentName, ObjectId, ComponentTypeName, ComponentTypeCode=ComponentType_long, SolutionID, BaseSolutionName, TopSolutionName, TopSolutionId"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "2b32bb40-2651-401e-a235-48e95a33561d",
      "title": "Dependency",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Object ID = component id",
      "visualType": "table",
      "pageId": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
      "layout": {
        "x": 0,
        "y": 37,
        "width": 24,
        "height": 13
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "obid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionDependency,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionDependency\n| where OrganizationId in (cllgetorginfo)\n| where DependentComponentObjectId == obid or RequiredComponentObjectId == obid\n| project DependencyType=case(DependencyType == \"0\", \"None\", \n                                DependencyType == \"1\", \"Solution internal\", \n                                DependencyType == \"2\", \"Published\",\n                                \"Unpublished\"), DependentComponentObjectId,\n        DependentComponentType = case(DependentComponentType == \"1\", \"Entity\",\n    DependentComponentType == \"2\", \"Attribute\",\n    DependentComponentType == \"3\", \"Relationship\",\n    DependentComponentType == \"4\", \"Attribute Picklist Value\",\n    DependentComponentType == \"5\", \"Attribute Lookup Value\",\n    DependentComponentType == \"6\", \"View Attribute\",\n    DependentComponentType == \"7\", \"Localized Label\",\n    DependentComponentType == \"8\", \"Relationship Extra Condition\",\n    DependentComponentType == \"9\", \"Option Set\",\n    DependentComponentType == \"10\", \"Entity Relationship\",\n    DependentComponentType == \"11\", \"Entity Relationship Role\",\n    DependentComponentType == \"12\", \"Entity Relationship Relationships\",\n    DependentComponentType == \"13\", \"Managed Property\",\n    DependentComponentType == \"14\", \"Entity Key\",\n    DependentComponentType == \"16\", \"Privilege\",\n    DependentComponentType == \"17\", \"PrivilegeObjectTypeCode\",\n    DependentComponentType == \"20\", \"Role\",\n    DependentComponentType == \"21\", \"Role Privilege\",\n    DependentComponentType == \"22\", \"Display String\",\n    DependentComponentType == \"23\", \"Display String Map\",\n    DependentComponentType == \"24\", \"Form\",\n    DependentComponentType == \"25\", \"Organization\",\n    DependentComponentType == \"26\", \"Saved Query\",\n    DependentComponentType == \"29\", \"Workflow\",\n    DependentComponentType == \"31\", \"Report\",\n    DependentComponentType == \"32\", \"Report Entity\",\n    DependentComponentType == \"33\", \"Report Category\",\n    DependentComponentType == \"34\", \"Report Visibility\",\n    DependentComponentType == \"35\", \"Attachment\",\n    DependentComponentType == \"36\", \"Email Template\",\n    DependentComponentType == \"37\", \"Contract Template\",\n    DependentComponentType == \"38\", \"KB Article Template\",\n    DependentComponentType == \"39\", \"Mail Merge Template\",\n    DependentComponentType == \"44\", \"Duplicate Rule\",\n    DependentComponentType == \"45\", \"Duplicate Rule Condition\",\n    DependentComponentType == \"46\", \"Entity Map\",\n    DependentComponentType == \"47\", \"Attribute Map\",\n    DependentComponentType == \"48\", \"Ribbon Command\",\n    DependentComponentType == \"49\", \"Ribbon Context Group\",\n    DependentComponentType == \"50\", \"Ribbon Customization\",\n    DependentComponentType == \"52\", \"Ribbon Rule\",\n    DependentComponentType == \"53\", \"Ribbon Tab To Command Map\",\n    DependentComponentType == \"55\", \"Ribbon Diff\",\n    DependentComponentType == \"59\", \"Saved Query Visualization\",\n    DependentComponentType == \"60\", \"System Form\",\n    DependentComponentType == \"61\", \"Web Resource\",\n    DependentComponentType == \"62\", \"Site Map\",\n    DependentComponentType == \"63\", \"Connection Role\",\n    DependentComponentType == \"64\", \"Complex Control\",\n    DependentComponentType == \"65\", \"Hierarchy Rule\",\n    DependentComponentType == \"66\", \"Custom Control\",\n    DependentComponentType == \"68\", \"Custom Control Default Config\",\n    DependentComponentType == \"70\", \"Field Security Profile\",\n    DependentComponentType == \"71\", \"Field Permission\",\n    DependentComponentType == \"90\", \"Plugin Type\",\n    DependentComponentType == \"91\", \"Plugin Assembly\",\n    DependentComponentType == \"92\", \"SDK Message Processing Step\",\n    DependentComponentType == \"93\", \"SDK Message Processing Step Image\",\n    DependentComponentType == \"95\", \"Service Endpoint\",\n    DependentComponentType == \"150\", \"Routing Rule\",\n    DependentComponentType == \"151\", \"Routing Rule Item\",\n    DependentComponentType == \"152\", \"SLA\",\n    DependentComponentType == \"153\", \"SLA Item\",\n    DependentComponentType == \"154\", \"Convert Rule\",\n    DependentComponentType == \"155\", \"Convert Rule Item\",\n    DependentComponentType == \"161\", \"Mobile Offline Profile\",\n    DependentComponentType == \"162\", \"Mobile Offline Profile Item\",\n    DependentComponentType == \"165\", \"Similarity Rule\",\n    DependentComponentType == \"166\", \"Data Source Mapping\",\n    DependentComponentType == \"201\", \"SDK Message\",\n    DependentComponentType == \"202\", \"SDK Message Filter\",\n    DependentComponentType == \"203\", \"Sdk Message Pair\",\n    DependentComponentType == \"204\", \"Sdk Message Request\",\n    DependentComponentType == \"205\", \"Sdk Message Request Field\",\n    DependentComponentType == \"206\", \"Sdk Message Response\",\n    DependentComponentType == \"207\", \"Sdk Message Response Field\",\n    DependentComponentType == \"208\", \"Import Map\",\n    DependentComponentType == \"300\", \"Canvas App\",\n    DependentComponentType == \"371\", \"Connector\",\n    DependentComponentType == \"372\", \"Connector\",\n    DependentComponentType == \"380\", \"Environment Variable Definition\",\n    DependentComponentType == \"381\", \"Environment Variable Value\",\n    DependentComponentType == \"400\", \"AI Project Type\",\n    DependentComponentType == \"401\", \"AI Project\",\n    DependentComponentType == \"402\", \"AI Configuration\",\n    DependentComponentType == \"430\", \"Entity Analytics Configuration\",\n    DependentComponentType == \"431\", \"Attribute Image Configuration\",\n    \"Entity Image Configuration\"), \n        DependentComponentBaseSolutionId, RequiredComponentObjectId, \n        RequiredComponentType = case(RequiredComponentType == \"1\", \"Entity\",\n    RequiredComponentType == \"2\", \"Attribute\",\n    RequiredComponentType == \"3\", \"Relationship\",\n    RequiredComponentType == \"4\", \"Attribute Picklist Value\",\n    RequiredComponentType == \"5\", \"Attribute Lookup Value\",\n    RequiredComponentType == \"6\", \"View Attribute\",\n    RequiredComponentType == \"7\", \"Localized Label\",\n    RequiredComponentType == \"8\", \"Relationship Extra Condition\",\n    RequiredComponentType == \"9\", \"Option Set\",\n    RequiredComponentType == \"10\", \"Entity Relationship\",\n    RequiredComponentType == \"11\", \"Entity Relationship Role\",\n    RequiredComponentType == \"12\", \"Entity Relationship Relationships\",\n    RequiredComponentType == \"13\", \"Managed Property\",\n    RequiredComponentType == \"14\", \"Entity Key\",\n    RequiredComponentType == \"16\", \"Privilege\",\n    RequiredComponentType == \"17\", \"PrivilegeObjectTypeCode\",\n    RequiredComponentType == \"20\", \"Role\",\n    RequiredComponentType == \"21\", \"Role Privilege\",\n    RequiredComponentType == \"22\", \"Display String\",\n    RequiredComponentType == \"23\", \"Display String Map\",\n    RequiredComponentType == \"24\", \"Form\",\n    RequiredComponentType == \"25\", \"Organization\",\n    RequiredComponentType == \"26\", \"Saved Query\",\n    RequiredComponentType == \"29\", \"Workflow\",\n    RequiredComponentType == \"31\", \"Report\",\n    RequiredComponentType == \"32\", \"Report Entity\",\n    RequiredComponentType == \"33\", \"Report Category\",\n    RequiredComponentType == \"34\", \"Report Visibility\",\n    RequiredComponentType == \"35\", \"Attachment\",\n    RequiredComponentType == \"36\", \"Email Template\",\n    RequiredComponentType == \"37\", \"Contract Template\",\n    RequiredComponentType == \"38\", \"KB Article Template\",\n    RequiredComponentType == \"39\", \"Mail Merge Template\",\n    RequiredComponentType == \"44\", \"Duplicate Rule\",\n    RequiredComponentType == \"45\", \"Duplicate Rule Condition\",\n    RequiredComponentType == \"46\", \"Entity Map\",\n    RequiredComponentType == \"47\", \"Attribute Map\",\n    RequiredComponentType == \"48\", \"Ribbon Command\",\n    RequiredComponentType == \"49\", \"Ribbon Context Group\",\n    RequiredComponentType == \"50\", \"Ribbon Customization\",\n    RequiredComponentType == \"52\", \"Ribbon Rule\",\n    RequiredComponentType == \"53\", \"Ribbon Tab To Command Map\",\n    RequiredComponentType == \"55\", \"Ribbon Diff\",\n    RequiredComponentType == \"59\", \"Saved Query Visualization\",\n    RequiredComponentType == \"60\", \"System Form\",\n    RequiredComponentType == \"61\", \"Web Resource\",\n    RequiredComponentType == \"62\", \"Site Map\",\n    RequiredComponentType == \"63\", \"Connection Role\",\n    RequiredComponentType == \"64\", \"Complex Control\",\n    RequiredComponentType == \"65\", \"Hierarchy Rule\",\n    RequiredComponentType == \"66\", \"Custom Control\",\n    RequiredComponentType == \"68\", \"Custom Control Default Config\",\n    RequiredComponentType == \"70\", \"Field Security Profile\",\n    RequiredComponentType == \"71\", \"Field Permission\",\n    RequiredComponentType == \"90\", \"Plugin Type\",\n    RequiredComponentType == \"91\", \"Plugin Assembly\",\n    RequiredComponentType == \"92\", \"SDK Message Processing Step\",\n    RequiredComponentType == \"93\", \"SDK Message Processing Step Image\",\n    RequiredComponentType == \"95\", \"Service Endpoint\",\n    RequiredComponentType == \"150\", \"Routing Rule\",\n    RequiredComponentType == \"151\", \"Routing Rule Item\",\n    RequiredComponentType == \"152\", \"SLA\",\n    RequiredComponentType == \"153\", \"SLA Item\",\n    RequiredComponentType == \"154\", \"Convert Rule\",\n    RequiredComponentType == \"155\", \"Convert Rule Item\",\n    RequiredComponentType == \"161\", \"Mobile Offline Profile\",\n    RequiredComponentType == \"162\", \"Mobile Offline Profile Item\",\n    RequiredComponentType == \"165\", \"Similarity Rule\",\n    RequiredComponentType == \"166\", \"Data Source Mapping\",\n    RequiredComponentType == \"201\", \"SDK Message\",\n    RequiredComponentType == \"202\", \"SDK Message Filter\",\n    RequiredComponentType == \"203\", \"Sdk Message Pair\",\n    RequiredComponentType == \"204\", \"Sdk Message Request\",\n    RequiredComponentType == \"205\", \"Sdk Message Request Field\",\n    RequiredComponentType == \"206\", \"Sdk Message Response\",\n    RequiredComponentType == \"207\", \"Sdk Message Response Field\",\n    RequiredComponentType == \"208\", \"Import Map\",\n    RequiredComponentType == \"300\", \"Canvas App\",\n    RequiredComponentType == \"371\", \"Connector\",\n    RequiredComponentType == \"372\", \"Connector\",\n    RequiredComponentType == \"380\", \"Environment Variable Definition\",\n    RequiredComponentType == \"381\", \"Environment Variable Value\",\n    RequiredComponentType == \"400\", \"AI Project Type\",\n    RequiredComponentType == \"401\", \"AI Project\",\n    RequiredComponentType == \"402\", \"AI Configuration\",\n    RequiredComponentType == \"430\", \"Entity Analytics Configuration\",\n    RequiredComponentType == \"431\", \"Attribute Image Configuration\",\n    \"Entity Image Configuration\"), \n        RequiredComponentBaseSolutionId"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "ca172a9f-65ee-4dbf-8116-23d0c1886dc3",
      "title": "Component event by Activity ID",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Activity ID\n- Solution ID\n- Component type",
      "visualType": "table",
      "pageId": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
      "layout": {
        "x": 0,
        "y": 60,
        "width": 24,
        "height": 14
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "6eb828fd-1b60-4408-bf0f-6b10719211b8"
        },
        "usedVariables": [
          "Retrieve org id_2",
          "_endTime",
          "_startTime",
          "activityid",
          "comptype"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id_2']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponentEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponentEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponentEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").SolutionComponentEvents\n| where PreciseTimeStamp between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where ActivityId == activityid or isempty(activityid)\n| where componentType == comptype or isempty(comptype)\n| project PreciseTimeStamp, eventType, isSuccess, componentType, message\n| order by PreciseTimeStamp desc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "e0e030b0-4b29-4497-bfc8-5cc81a11cb2b",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "==",
                "column": "isSuccess",
                "values": [
                  "false"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "bold",
            "color": "red",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "11bde036-d267-4e24-818c-e358d5fe0b53",
      "title": "Near-realtime",
      "description": "Require:\n- Organization ID\n\nFilter:\n- System user ID\n- Agent name: Client who called the API\n- Request string\n- Request ID = Request ID or Client request ID or Client session ID",
      "visualType": "table",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 0,
        "y": 26,
        "width": 24,
        "height": 17
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "reqid",
          "requeststring"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| where Request has requeststring or isempty(requeststring) \n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| where * contains reqid or isempty(reqid)\n| extend Type=substring(HttpStatus,0,3)\n| project TIMESTAMP, ActivityId, HttpMethod, requestId, Request, HttpStatus, ExecutionTime, UserAgent, SystemUserId, ClientRequestId, ClientSessionId, AADObjectId, Type\n| order by TIMESTAMP desc\n| take 200\n\n//Query to copy\n// union \n// cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\n// cluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n// | where TIMESTAMP between (<start> .. <end>)\n// | where OrganizationId == <orgid>\n// | where Request has <requeststring>\n// | where SystemUserId contains <agentid>\n// | where UserAgent contains <agentname>\n// | where * contains <requestid>\n// | project TIMESTAMP, ActivityId, HttpMethod, requestId, Request, HttpStatus, ExecutionTime, UserAgent, SystemUserId, ClientRequestId, ClientSessionId, AADObjectId, Type\n// | order by TIMESTAMP desc\n// | take 200"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "0dec793b-9ddc-40a8-b2e1-03e18bea93c3",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "<",
                "column": "Type",
                "values": [
                  "400"
                ]
              },
              {
                "operator": "!=",
                "column": "HttpStatus",
                "values": [
                  "200 OK"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "yellow",
            "tag": "",
            "icon": null,
            "ruleName": ""
          },
          {
            "id": "5ded87db-c804-4264-8ddd-023f8e425ea9",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": ">=",
                "column": "Type",
                "values": [
                  "400"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "red",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "c06d9222-a09c-4bed-81fd-794472949cd2",
      "title": "FCBs",
      "description": "",
      "visualType": "table",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 29,
        "width": 24,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "let cllorg = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| project ScaleGroupId\n| take 1\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").FeatureControlSettings,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").FeatureControlSettings\n| where ScopeId in (cllorg)\n| summarize ModifiedOn=max(ModifiedOn) by Name, Enabled, id, CreatedOn, ['FCB Scope']\n| project Name, Enabled, id, CreatedOn, ModifiedOn, ['FCB Scope']"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "f0b62038-2b05-4dcd-8fd3-a38be9119643",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "==",
                "column": "Enabled",
                "values": [
                  "false"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "red",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "6790d8bd-e72e-4cf7-8025-6e2c2cc9d52a",
      "title": "Metadata layer",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Component name = any type of component name\n- Object ID = component id",
      "visualType": "table",
      "pageId": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
      "layout": {
        "x": 0,
        "y": 50,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "compname",
          "layertype",
          "obid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nlet executeentity = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaEntities,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaEntities\n| where OrganizationId in (cllgetorginfo)\n| where Name contains compname or LogicalName contains compname or PhysicalName contains compname or isempty(compname)\n| where EntityId contains obid or isempty(obid)\n| summarize ModifiedOn=max(ModifiedOn) by SolutionUniqueName, EntityId, Name, SolutionId, ComponentState, OverwriteTime, ObjectTypeCode, BaseTableName, PhysicalName, LogicalName, IsCustomizable, IsActivity, IsActivityParty, IsAudited, IsAuditEnabled, IsValidForAdvancedFind, IsRequiredOffline, ChangeTrackingEnabled, DataProviderId, DataSourceId, EntitySetName, IsCustomEntity, IsIntersect, ParentComponentType, IsMSTeamsIntegrationEnabled, IsShareableAcrossOrgs, OwnershipTypeMask, IsSolutionAware, IsLogicalEntity, IsRenameable, PublisherId, PublisherUniqueName\n| project SolutionUniqueName, ModifiedOn, EntityId, Name, SolutionId, ComponentState, OverwriteTime, ObjectTypeCode, BaseTableName, PhysicalName, LogicalName, IsCustomizable, IsActivity, IsActivityParty, IsAudited, IsAuditEnabled, IsValidForAdvancedFind, IsRequiredOffline, ChangeTrackingEnabled, DataProviderId, DataSourceId, EntitySetName, IsCustomEntity, IsIntersect, ParentComponentType, IsMSTeamsIntegrationEnabled, IsShareableAcrossOrgs, OwnershipTypeMask, IsSolutionAware, IsLogicalEntity, IsRenameable, PublisherId, PublisherUniqueName\n);\nlet executeoptionset = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaOptionsets,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaOptionsets\n| where OrganizationId in (cllgetorginfo)\n| where Name contains compname or isempty(compname)\n| where OptionSetId contains obid or isempty(obid)\n| summarize ModifiedOn=max(PreciseTimeStamp) by SolutionUniqueName, OptionSetId, Name, SolutionId, ComponentState, OverwriteTime, OptionSetType, ParentOptionSetId, IsGlobal, IsCustomOptionSet, IsCustomizable, IsManaged, ExternalTypeName, PublisherId, PublisherUniqueName\n| project SolutionUniqueName, ModifiedOn, OptionSetId, Name, SolutionId, ComponentState, OverwriteTime, OptionSetType, ParentOptionSetId, IsGlobal, IsCustomOptionSet, IsCustomizable, IsManaged, ExternalTypeName, PublisherId, PublisherUniqueName\n);\nlet executeentityrelationship = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaEntityRelationships,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaEntityRelationships\n| where OrganizationId in (cllgetorginfo)\n| where SchemaName contains compname or isempty(compname)\n| where EntityRelationshipId contains obid or isempty(obid)\n| summarize ModifiedOn=max(ModifiedOn) by SolutionUniqueName, EntityRelationshipId, SchemaName, SolutionId, ComponentState, OverwriteTime, IsCustomRelationship, CanChangeHierarchicalSettings, IsHierarchical, IsCustomizable, PublisherId\n| project SolutionUniqueName, ModifiedOn, EntityRelationshipId, SchemaName, SolutionId, ComponentState, OverwriteTime, IsCustomRelationship, CanChangeHierarchicalSettings, IsHierarchical, IsCustomizable, PublisherId\n);\nlet executelookupfield = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaAttributeLookupValues,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").MetadataschemaAttributeLookupValues\n| where OrganizationId in (cllgetorginfo)\n| where AttributeName contains compname or isempty(compname)\n| where AttributeId contains obid or isempty(obid)\n| summarize ModifiedOn=max(ModifiedOn) by SolutionUniqueName, AttributeId, AttributeName, TargetEntityName, AttributeLookupValueId, EntityId, SolutionId, ComponentState, OverwriteTime, PublisherId, PublisherUniqueName\n| project SolutionUniqueName, ModifiedOn, AttributeId, AttributeName, TargetEntityName, AttributeLookupValueId, EntityId, SolutionId, ComponentState, OverwriteTime, PublisherId, PublisherUniqueName\n);\nunion\n(executeentity | where layertype == 'executeentity'),\n(executeoptionset | where layertype == 'executeoptionset'),\n(executeentityrelationship | where layertype == 'executeentityrelationship'),\n(executelookupfield | where layertype == 'executelookupfield')"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "bb7d60ca-ed93-4a44-b864-5482e693d9a0",
      "title": "Workflow execution details by workflow ID or record ID",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Workflow ID\n- Object ID = record ID",
      "visualType": "table",
      "pageId": "9d63d3c9-215c-47b5-a8a6-8b566398694b",
      "layout": {
        "x": 0,
        "y": 24,
        "width": 24,
        "height": 13
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "obid",
          "workflid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents\n| where env_time  between (_startTime.._endTime)\n| where organizationId in (cllgetorginfo)\n// | where ActivityId =~ filterId\n| where message contains workflid or isempty(workflid)\n| where message contains obid or isempty(obid)\n| where message contains \"WorkflowExpansion\"\n// | where message contains \"WorkflowDefinitionId\" and message  contains \"Update\"\n| extend messageJson = parse_json(message)\n| extend WorkflowDefinitionId=tostring(messageJson.WorkflowDefinitionId)\n| extend ActivationRecordId=tostring(messageJson.ActivationRecordId)\n| extend OperationId=tostring(messageJson.OperationId)\n| extend RecordId=tostring(messageJson.RecordId)\n| extend SdkMessageName=tostring(messageJson.SdkMessageName)\n| extend TriggerAttributeValue=tostring(messageJson.TriggerAttributeValue)\n| extend Msg=tostring(messageJson.Message)\n// | where isnotempty(ActivationRecordId)\n// | take 100\n| project env_time, correlationId, serviceRequestId, WorkflowDefinitionId, ActivationRecordId, OperationId, RecordId, SdkMessageName,TriggerAttributeValue,  Msg, message, activityName, activityId\n| summarize WFExpansionCount=count(), min(env_time), max(env_time), make_set(serviceRequestId), make_set(OperationId), make_set(TriggerAttributeValue), make_set(activityId) by RecordId, WorkflowDefinitionId, ActivationRecordId, SdkMessageName, activityName\n| project min_env_time, max_env_time, Execution_count = WFExpansionCount, WorkflowDefinitionId, ActivationRecordId, SdkMessageName, RecordId, activityName, RequestID = set_serviceRequestId, OperationID = set_OperationId, Trigger_attribute = set_TriggerAttributeValue, ActivityID = set_activityId\n"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "484d56b4-3588-48a4-9860-84051f91a767",
      "title": "Retrieve callback registration",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Component name = entity logical name",
      "visualType": "table",
      "pageId": "9d63d3c9-215c-47b5-a8a6-8b566398694b",
      "layout": {
        "x": 0,
        "y": 37,
        "width": 24,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "compname"
        ],
        "text": "//Retrieve callback registration\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").CallbackRegistrations,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").CallbackRegistrations\n// | where TIMESTAMP >= datetime(2023-10-28 00:00) and TIMESTAMP <= datetime(2023-10-31 23:00)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| where EntityName == compname or isempty(compname)\n| project TIMESTAMP, Geo, EntityName, FilteringAttributes, CreatedBy, CreatedOn, MessageFriendlyName, RunAs, SoftDeleteStatus, CallbackRegistrationId\n| order by TIMESTAMP desc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "90721254-b25e-4763-87c0-2119678b524e",
      "title": "Trace event for CBR by record ID",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Object ID = record ID",
      "visualType": "table",
      "pageId": "9d63d3c9-215c-47b5-a8a6-8b566398694b",
      "layout": {
        "x": 0,
        "y": 45,
        "width": 24,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "obid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents, OperationEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents, OperationEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents, OperationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents, OperationEvents\n| where organizationId in (cllgetorginfo)\n// | where env_time > ago(5d)\n| where env_time between(_startTime.._endTime)\n| where activityName contains \"CallbackRegistration\"\n| where customDimensions has obid or isempty(obid)\n| project env_time,serviceRequestId,customDimensions,correlationId,activityId,message \n| order by env_time asc "
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "118b7a08-7b5e-4295-9d55-261a13076362",
      "title": "All processes executions",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Workflow ID",
      "visualType": "table",
      "pageId": "9d63d3c9-215c-47b5-a8a6-8b566398694b",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 24,
        "height": 13
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "workflid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BusinessProcessFeaturesExecution,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BusinessProcessFeaturesExecution,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").BusinessProcessFeaturesExecution,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").BusinessProcessFeaturesExecution\n| where TIMESTAMP between(_startTime.._endTime)\n| where featureInstanceId contains workflid or isempty(workflid)\n| where additionalInfo == \"Sync\"\n| where featureName in (\"N/A\", \"Workflow\", \"ProcessAction\")\n| where organizationId in (cllgetorginfo)\n| summarize arg_max(TIMESTAMP, correlationId,resultType, stackTrace, errorMessage, elapsedTimeMillSec) by featureInstanceId, featureName\n| extend Operation = iif(featureName == \"N/A\", \"BusinessRule\", featureName)\n| project ExecutedTime = TIMESTAMP, WorkFlowId = featureInstanceId, Operation, Result = resultType, CorrelationId = correlationId, Duration_ms = elapsedTimeMillSec, StackTrace = substring(stackTrace, 0, 200), ErrorMessage = substring(errorMessage, 0,200)\n| order by ExecutedTime desc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "074954ea-c504-44cc-9cbe-f48539332974",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "!=",
                "column": "Result",
                "values": [
                  "Success"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "red",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "44945bed-e961-42f5-8b32-565aae3ac7df",
      "title": "Failure by Workflow ID",
      "description": "Require:\n- Organization ID\n- Workflow ID",
      "visualType": "table",
      "pageId": "9d63d3c9-215c-47b5-a8a6-8b566398694b",
      "layout": {
        "x": 0,
        "y": 13,
        "width": 24,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "workflid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents\n| where env_time between (_startTime.._endTime) \n| where organizationId in (cllgetorginfo)\n// | where message contains \"WorkflowDefinitionId\" and message contains \"c82f1941-6e83-4bd2-a796-8ff0f8b12346\" \n| where message contains \"WorkflowDefinitionId\" and message contains workflid\n// | where message contains \"Should be exactly 1 MessageProcessingStep\" \n// | where message contains \"Should be exactly 1 MessageProcessingStep\" \n| where traceLevel == 'Error' \n| project env_time , message , serviceRequestId , traceLevel , organizationId \n"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "2e1bbb2b-5bf5-480d-b915-351bc6ec2ac7",
      "title": "DB slow query Diagnostics",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 12,
        "width": 24,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nUnionData('DBSlowQueryDiagnostics')\n| where organizationId in (cllgetorginfo)\n// | where TIMESTAMP >= ago(1d)\n| where TIMESTAMP between (_startTime .. _endTime)\n// | where ActivityId in (activityId)\n// | where sqlText contains \"str_pipelineobject0\"\n// | summarize count() by cdsQueryHash, sqlText, errorCode\n| project TIMESTAMP, Role, ActivityId, executionTimeInMilliseconds, executionId, sqlText, cdsQueryHash\n| order by executionTimeInMilliseconds desc \n| take 50"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "fe2cc6ae-54ea-414e-b33b-9e7de78b1324",
      "title": "DB Slow Query Diagnostics V2",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 23,
        "width": 24,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\r\n['Retrieve org id']\r\n);\r\nunion \r\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetDBSlowQueryDiagnostics(toscalar(cllgetorginfo), _startTime, _endTime),\r\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").GetDBSlowQueryDiagnostics(toscalar(cllgetorginfo), _startTime, _endTime)"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "3229e456-67a7-4eaf-80a7-c21d73f1dd8b",
      "title": "DB Exception Diagnostics",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 32,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmasyncprodcus.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\n  cluster(\"https://crmanacus.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\n  cluster(\"https://crmasyncprodweu.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\n  cluster(\"https://crmanaweu.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics\n) where organizationId in (cllgetorginfo)\n  and PreciseTimeStamp between (_startTime .. _endTime)\n  project sqlErrorCode, sqlText\n| parse source_ with \"cluster(\\\"\" Source \".kusto.windows.net\\\")\" *\n| summarize count(sqlErrorCode) by sqlErrorCode, Source, sqlText\n| order by count_sqlErrorCode desc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "a94b0c23-a22c-4271-8300-a2890ce5814a",
      "title": "DB health",
      "description": "",
      "visualType": "timechart",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 16,
        "height": 12
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics\n) where TIMESTAMP between (_startTime.._endTime) \nand organizationId in (cllgetorginfo)\nand executionTimeInMilliseconds > 5000\n  project TIMESTAMP, executionTimeInMilliseconds\n| project TIMESTAMP = bin(TIMESTAMP, totimespan(interval)), bucket = case(executionTimeInMilliseconds > 120000, \"120s+\", executionTimeInMilliseconds > 60000, \"60-120s\", executionTimeInMilliseconds > 30000, \"30-60s\", executionTimeInMilliseconds > 10000, \"10-30s\", \"5-10s\")\n| evaluate pivot(bucket, count())\n| extend ExceptionCount = 0\n| union \n(\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").DBExceptionDiagnostics\n) where TIMESTAMP between (_startTime.._endTime)\nand organizationId in (cllgetorginfo)\nand sqlErrorCode != \"2601\"\n| summarize ExceptionCount = count() by TIMESTAMP = bin(TIMESTAMP, totimespan(interval))\n| project TIMESTAMP, ExceptionCount\n)"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "6aae17be-4360-4624-aec6-3baa5ca57ef1",
      "title": "Slow query count",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 16,
        "y": 0,
        "width": 4,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nUnionData('DBSlowQueryDiagnostics')\n| where organizationId in (cllgetorginfo)\n// | where TIMESTAMP >= ago(1d)\n| where TIMESTAMP between (_startTime .. _endTime)\n// | where ActivityId in (activityId)\n// | where sqlText contains \"str_pipelineobject0\"\n// | summarize count() by cdsQueryHash, sqlText, errorCode\n| where executionTimeInMilliseconds > 5000\n| project TIMESTAMP, Role, ActivityId, executionTimeInMilliseconds, executionId, sqlText, cdsQueryHash\n| count "
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "3a5292da-381c-4b0f-a4e2-6672759df919",
      "title": "Exception count",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 16,
        "y": 4,
        "width": 4,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmasyncprodcus.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\n  cluster(\"https://crmanacus.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\n  cluster(\"https://crmasyncprodweu.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics,\n  cluster(\"https://crmanaweu.kusto.windows.net:443\").database(\"CRMAnalytics\").DBExceptionDiagnostics\n) where organizationId in (cllgetorginfo)\n  and PreciseTimeStamp between (_startTime .. _endTime)\n  project sqlErrorCode, sqlText\n| parse source_ with \"cluster(\\\"\" Source \".kusto.windows.net\\\")\" *\n| summarize count(sqlErrorCode) by sqlErrorCode, Source, sqlText\n| count"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "58ad4495-1d04-4604-a0fb-3c82c82abf72",
      "title": "Throttled count ",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 20,
        "y": 0,
        "width": 4,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetThrottledQueriesDuration(toscalar(cllgetorginfo), _startTime, _endTime),\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").GetThrottledQueriesDuration(toscalar(cllgetorginfo), _startTime, _endTime)\n| count "
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "8bd76136-2a22-426e-aec1-63f8ffb1698b",
      "title": "Throttled query",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 42,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\r\n['Retrieve org id']\r\n);\r\nunion \r\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetThrottledQueriesDuration(toscalar(cllgetorginfo), _startTime, _endTime),\r\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").GetThrottledQueriesDuration(toscalar(cllgetorginfo), _startTime, _endTime)"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "3fb07183-9bad-48a8-a4d8-1ef624962144",
      "title": "Inactive transaction count",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 20,
        "y": 4,
        "width": 4,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetOrgSQLInactivetransaction(toscalar(cllgetorginfo), _startTime, _endTime),\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").GetOrgSQLInactivetransaction(toscalar(cllgetorginfo), _startTime, _endTime)\n|count "
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "a7e56603-9827-415d-958e-7f2ec5300fc3",
      "title": "Inactive transaction",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 52,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\r\n['Retrieve org id']\r\n);\r\nunion \r\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetOrgSQLInactivetransaction(toscalar(cllgetorginfo), _startTime, _endTime),\r\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").GetOrgSQLInactivetransaction(toscalar(cllgetorginfo), _startTime, _endTime)"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "241dfcc7-44c3-406e-ad8c-d80e96dadc25",
      "title": "Find query ID (queryhash/requestid/sqltext)",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 16,
        "y": 8,
        "width": 8,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "findby",
          "quehash",
          "reqid",
          "sqltxt"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nlet exa1 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetQueryIdUsingCDSQueryHash(toscalar(cllgetorginfo),quehash)\n);\nlet exa2 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetQueryIdOfSlowestQuery(reqid)\n);\nlet exa3 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").GetQueryStoreExecutionCount(toscalar(cllgetorginfo),_startTime,_endTime)\n| where query_sql_text startswith sqltxt or query_sql_text contains sqltxt\n);\nunion\n(exa1 | where findby == 'a1'),\n(exa2 | where findby == 'a2'),\n(exa3 | where findby == 'a3')"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "da4d104c-5097-4298-b83f-a84243309884",
      "title": "BPO events",
      "description": "Require:\n- Organization ID\n- Event type = BPO event type\n\nFilter:\n- Component name = entity logical name\n- Object ID = record id",
      "visualType": "table",
      "pageId": "2aba6666-45d2-4f33-97f4-1df4d6e6fe93",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "compname",
          "evtype",
          "obid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nlet bpocreate = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BPOCreateCompleted,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BPOCreateCompleted\n| where organizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where entityName == compname or isempty(compname)\n| where * == obid or isempty(obid)\n| project TIMESTAMP, entityName, objectId, userId, principalObjectId, ActivityId\n);\nlet bpodelete = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BPODeleteCompleted,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BPODeleteCompleted\n| where organizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where entityName == compname or isempty(compname)\n| where * == obid or isempty(obid)\n| project TIMESTAMP, entityName, objectId, userId, principalObjectId, ActivityId\n);\nlet bpodis = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BPODisassociateCompleted,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BPODisassociateCompleted\n| where organizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where entityName == compname or isempty(compname)\n| where * == obid or isempty(obid)\n| project TIMESTAMP, entityName, objectId, userId, principalObjectId, ActivityId\n);\nlet bpomultipledelete = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BPOMultipleDeleteCompleted,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BPOMultipleDeleteCompleted\n| where organizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where * == obid or isempty(obid)\n| project TIMESTAMP, principalObjectId, userId, ActivityId\n);\nlet bpomultipleretrieve = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BPOMultipleRetrieveCompleted,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BPOMultipleRetrieveCompleted\n| where organizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where entityName == compname or isempty(compname)\n| where * == obid or isempty(obid)\n| project TIMESTAMP, entityName, principalObjectId, userId, ActivityId\n);\nlet bporetrieve = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BPORetrieveCompleted,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BPORetrieveCompleted\n| where organizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where entityName == compname or isempty(compname)\n| where * == obid or isempty(obid)\n| project TIMESTAMP, entityName, objectId, userId, principalObjectId, ActivityId\n);\nlet bpoupdate = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").BPOUpdateCompleted,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").BPOUpdateCompleted\n| where organizationId in (cllgetorginfo)\n| where TIMESTAMP between (_startTime .. _endTime)\n| where entityName == compname or isempty(compname)\n| where * == obid or isempty(obid)\n| project TIMESTAMP, entityName, objectId, userId, principalObjectId, ActivityId\n);\nunion\n(bpomultipleretrieve | where evtype == 'BPOMultipleRetrieveCompleted'),\n(bpomultipledelete | where evtype == 'BPOMultipleDeleteCompleted'),\n(bpocreate | where evtype == 'BPOCreateCompleted'),\n(bpodelete | where evtype == 'BPODeleteCompleted'),\n(bporetrieve | where evtype == 'BPORetrieveCompleted'),\n(bpoupdate | where evtype == 'BPOUpdateCompleted'),\n(bpodis | where evtype == 'BPODisassociateCompleted')"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "093c6c1e-e4cb-4ea6-889a-12d8153f92fa",
      "title": "Trace error",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Request ID = Request ID or Activity ID or any ID\n- Request string = a part or full error message",
      "visualType": "table",
      "pageId": "2aba6666-45d2-4f33-97f4-1df4d6e6fe93",
      "layout": {
        "x": 0,
        "y": 10,
        "width": 24,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "reqid",
          "requeststring"
        ],
        "text": "//Trace error\nlet cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents, \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents, \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").TraceError,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceError,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").TraceError,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceError\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where * contains reqid or isempty(reqid)\n| where traceMessage contains requeststring or isempty(requeststring) \n| project TIMESTAMP,ErrorMessage=strcat(message,traceMessage),stackTrace,TaskName,traceLevel,traceCategory,userId,correlationId,ActivityId=strcat(activityId,ActivityId),RequestId = strcat(requestId,serviceRequestId),activityName,customDimensions,principalObjectId,clientApplicationId\n| order by TIMESTAMP desc \n\n"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "8d4e0881-eafa-498b-bc21-ded8d048aae1",
      "title": "Extend operation event by correlation ID (contains fdisland)",
      "description": "Require:\n- Organization ID\n- Correlation ID",
      "visualType": "table",
      "pageId": "2aba6666-45d2-4f33-97f4-1df4d6e6fe93",
      "layout": {
        "x": 0,
        "y": 21,
        "width": 24,
        "height": 12
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "corrid"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nlet _correlationId = corrid;\nlet WebRequestStatisticsData = materialize(\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime.. _endTime)\n      and OrganizationId in (cllgetorginfo)\n    and (ActivityId =~ _correlationId \n           or ClientActivityId =~ _correlationId\n         or ClientRequestId =~ _correlationId\n       or ClientSessionId =~ _correlationId \n       or requestId =~ _correlationId\n       or serverResponseId =~ _correlationId \n         or WebRequestStatsCorrelationId =~ _correlationId\n       or Headers has _correlationId)\n| extend source = \"Web\", sourceTable = \"WebRequestStatistics\"\n| project TIMESTAMP, HttpStatus, OperationName, ActivityId, ClientActivityId, ClientRequestId, ClientSessionId, requestId, serverResponseId, WebRequestStatsCorrelationId, Headers, source, sourceTable\n| summarize arg_max(TIMESTAMP,*) by ClientActivityId\n| extend ColumnsSearched = dynamic_to_json(bag_pack_columns(ActivityId, ClientActivityId, ClientRequestId, ClientSessionId, requestId, serverResponseId, WebRequestStatsCorrelationId))\n| project env_time = TIMESTAMP, correlationId = ClientActivityId, serviceRequestId = serverResponseId, clientSessionId = ClientSessionId, clientRequestId = ClientRequestId, principalObjectId = \"\", activityName = \"\", operationType = \"\", activityVector = \"\", resultType = HttpStatus, source, sourceTable, ColumnsSearched, DisplayPriority = 5);\nlet OperationEventsData = materialize (\nfind in (\n    cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").OperationEvents\n    )\n    where (env_time between (_startTime.. _endTime))\n    and (organizationId in (cllgetorginfo) or OrganizationId in (cllgetorginfo))\n      and (ActivityId =~ _correlationId\n       or activityId =~ _correlationId\n         or clientRequestId =~ _correlationId\n       or clientSessionId =~ _correlationId\n       or correlationId =~ _correlationId\n       or executionId =~ _correlationId\n       or parentExecutionId =~ _correlationId\n         or requestId =~ _correlationId\n         or serviceRequestId =~ _correlationId\n         or customDimensions has _correlationId)\n| extend source = iff(source_ contains \"async\", \"Async\", \"Web\"), sourceTable = \"OperationEvents\"\n| extend orderPriority = case(resultType == \"Failure\", 1, resultType == \"SuccessDespiteError\", 2, resultType == \"Success\", 3, 4)\n| project env_time, source, sourceTable, resultType, activityId = coalesce(activityId,column_ifexists(\"ActivityId1\",\"\"),\"\"), clientRequestId, clientSessionId, correlationId, executionId, parentExecutionId, requestId, serviceRequestId, orderPriority, principalObjectId, activityName, activityVector, operationType\n| order by orderPriority asc, env_time desc\n| summarize arg_max(env_time,*) by resultType, source\n| summarize arg_min(orderPriority,*) by correlationId\n| extend ColumnsSearched = dynamic_to_json(bag_pack_columns(activityId, clientRequestId, clientSessionId, correlationId, executionId, parentExecutionId, requestId, serviceRequestId))\n| project env_time = env_time, correlationId, serviceRequestId, clientSessionId, clientRequestId, principalObjectId , activityName, operationType , activityVector, resultType, source, sourceTable, ColumnsSearched, DisplayPriority = 1);\nlet TraceEventsData = materialize (\nfind in (\n    cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").TraceEvents\n    )\n    where (env_time between (_startTime.. _endTime))\n    and (organizationId in (cllgetorginfo) or OrganizationId in (cllgetorginfo))\n    and (ActivityId =~ _correlationId\n       or activityId =~ _correlationId\n       or clientRequestId =~ _correlationId\n       or clientSessionId =~ _correlationId\n       or correlationId =~ _correlationId\n       or serviceRequestId =~ _correlationId)\n| extend source = iff(source_ contains \"async\", \"Async\", \"Web\"), sourceTable = \"TraceEvents\"\n| extend orderPriority = case(traceLevel == \"Error\", 1, traceLevel == \"Warning\", 2, traceLevel == \"Info\", 3, 4)\n| project env_time, source, sourceTable, traceLevel, activityId = coalesce(activityId,column_ifexists(\"ActivityId1\",\"\"),\"\"), clientRequestId, clientSessionId, correlationId, serviceRequestId, orderPriority, principalObjectId, activityName, activityVector\n| order by orderPriority asc, env_time desc\n| summarize arg_max(env_time, *) by traceLevel, source\n| summarize arg_min(orderPriority, *) by correlationId\n| extend ColumnsSearched = dynamic_to_json(bag_pack_columns(activityId, clientRequestId, clientSessionId, correlationId, serviceRequestId))\n| project env_time = env_time, correlationId, serviceRequestId, clientSessionId, clientRequestId, principalObjectId , activityName, operationType = \"\", activityVector, resultType = traceLevel, source, sourceTable, ColumnsSearched, DisplayPriority = 3);\nlet CommunicationEventsData = materialize(\nfind in (\n    cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").CommunicationEvents,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").CommunicationEvents,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").CommunicationEvents,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").CommunicationEvents\n    )\n    where (env_time between (_startTime.. _endTime))\n    and organizationId in (cllgetorginfo)\n    and (ActivityId =~ _correlationId\n       or activityId =~ _correlationId\n       or clientRequestId =~ _correlationId\n       or clientSessionId =~ _correlationId\n       or correlationId =~ _correlationId\n       or serviceRequestId =~ _correlationId)\n| extend source = iff(source_ contains \"async\", \"Async\", \"Web\"), sourceTable = \"CommunicationEvents\"\n| extend orderPriority = case(resultType == \"Failure\", 1, resultType == \"SuccessDespiteError\", 2, resultType == \"Success\", 3, 4)\n| project env_time, source, sourceTable, resultType, activityId = coalesce(activityId,column_ifexists(\"ActivityId1\",\"\"),\"\"), clientRequestId, clientSessionId, correlationId, serviceRequestId, orderPriority, principalObjectId, activityName, operationType, activityVector\n| order by orderPriority asc, env_time desc\n| summarize arg_max(env_time, *) by resultType, source\n| summarize arg_min(orderPriority,*) by correlationId\n| extend ColumnsSearched = dynamic_to_json(bag_pack_columns(activityId, clientRequestId, clientSessionId, correlationId, serviceRequestId))\n| project env_time = env_time, correlationId, serviceRequestId, clientSessionId, clientRequestId, principalObjectId , activityName, operationType, activityVector, resultType, source, sourceTable, ColumnsSearched, DisplayPriority = 4);\nlet SandboxExecutionData = materialize(\nfind in (\n    cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecution,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecution,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecution,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecution\n    )\n    where TIMESTAMP between (_startTime.. _endTime)\n    and organizationId in (cllgetorginfo)\n    and (ActivityId  =~ _correlationId\n       or executionId =~ _correlationId\n       or parentExecutionId =~ _correlationId\n       or requestId =~ _correlationId\n       or trackingId =~ _correlationId)\n| extend source = iff(source_ contains \"async\", \"Async\", \"Web\"), sourceTable = \"SandboxExecution\"\n| project TIMESTAMP, source, sourceTable, passed, ActivityId, executionId, parentExecutionId, requestId, trackingId\n| order by passed asc, TIMESTAMP desc\n| summarize arg_max(TIMESTAMP,*) by passed, requestId\n| extend ColumnsSearched = dynamic_to_json(bag_pack_columns(ActivityId, executionId, parentExecutionId, requestId, trackingId))\n| project env_time = TIMESTAMP, correlationId = \"\", serviceRequestId = requestId, clientSessionId = \"\", clientRequestId = \"\", principalObjectId = \"\" , activityName=\"\", operationType = \"\", activityVector = \"\", resultType = tostring(passed), source, sourceTable, ColumnsSearched, DisplayPriority = 6);\nlet IslandsSandboxExecutionData = materialize (\nunion\ncluster(\"https://fdislandsas.southeastasia.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsau.australiaeast.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandseu.westeurope.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsus.centralus.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsbr.brazilsouth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsin.centralindia.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsfr.francecentral.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsjp.japaneast.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsuk.uksouth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsza.southafricanorth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsde.germanywestcentral.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents,\ncluster(\"https://fdislandsae.uaenorth.kusto.windows.net\").database(\"CAPAnalytics\").OperationEvents\n|  where env_time between (_startTime.. _endTime)\n| where organizationId in (cllgetorginfo)\n| where activityName == \"SandboxFabricHost.HostExecute\"\n| where correlationId =~ _correlationId\n     or activityId =~ _correlationId\n     or serviceRequestId =~ _correlationId\n     or clientSessionId =~ _correlationId\n     or clientRequestId =~ _correlationId\n     or customDimensions has _correlationId\n| extend cd = parse_json(customDimensions)\n| extend perceivedPassed = tostring(cd.perceivedPassed),\n         executionId = tostring(cd.executionId),\n         requestId = tostring(cd.requestId),\n         trackingId = tostring(cd.trackingId)\n| extend source = \"IslandsSandboxExecution\", sourceTable = \"OperationEvents\"\n| project env_time, source, sourceTable, activityName, perceivedPassed, activityId, serviceRequestId, correlationId, executionId, requestId, trackingId, customDimensions, clientSessionId, clientRequestId, principalObjectId, operationType, activityVector\n| order by perceivedPassed asc, env_time desc\n| summarize arg_max(env_time,*) by perceivedPassed\n| summarize arg_max(perceivedPassed,*) by correlationId\n| extend ColumnsSearched = dynamic_to_json(bag_pack_columns(correlationId, activityId, serviceRequestId, executionId, requestId, trackingId, clientSessionId, clientRequestId))\n| project env_time = env_time, correlationId, serviceRequestId, clientSessionId, clientRequestId, principalObjectId , activityName, operationType, activityVector, resultType = perceivedPassed, source, sourceTable, ColumnsSearched, DisplayPriority = 2);\nunion isfuzzy=true kind=outer \nWebRequestStatisticsData, OperationEventsData, TraceEventsData, CommunicationEventsData, SandboxExecutionData, IslandsSandboxExecutionData\n| order by DisplayPriority asc"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "7558ff0c-bd3e-446f-8779-dfebbd198273",
      "title": "System users",
      "description": "",
      "visualType": "table",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 38,
        "width": 24,
        "height": 12
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id"
        ],
        "text": "let clltenantid = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrgUserLicenseInfo,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrgUserLicenseInfo\n| where OrganizationId in (clltenantid)\n| summarize max(ModifiedOn) by SystemUserId, AccessMode=case(AccessMode == 0, 'Read-Write',AccessMode == 1, 'Administrative',AccessMode == 2, 'Read',AccessMode == 3, 'Support User',AccessMode == 4, 'Non-interactive', 'Delegated Admin'), AzureActiveDirectoryObjectId, IsActiveDirectoryUser, CreatedOn\n| project SystemUserId, AccessMode=case(AccessMode == 0, 'Read-Write',AccessMode == 1, 'Administrative',AccessMode == 2, 'Read',AccessMode == 3, 'Support User',AccessMode == 4, 'Non-interactive', 'Delegated Admin'), AzureActiveDirectoryObjectId, IsActiveDirectoryUser, CreatedOn"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "53719582-2df2-4cf9-b375-a5653d9dadd7",
      "title": "SDK request",
      "description": "",
      "visualType": "table",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 43,
        "width": 24,
        "height": 12
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ExtendedQoSEvent,\n  cluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ExtendedQoSEvent,\n  cluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").ExtendedQoSEvent,\n  cluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").ExtendedQoSEvent\n) where env_time between(_startTime.._endTime)\n  and resourceId in (cllgetorginfo)\n  and operationName != 'Event'\n  project resultDescription, durationMs, operationName, env_cloud_role, operationType, resultType\n| extend entityType = extract(\"Entity Type: (.+)\",1,resultDescription)\n| summarize percentiles(durationMs, 50, 85, 90, 95), NumOfRequests = count(),Cumulative=sum(durationMs) by operationName, env_cloud_role, operationType, resultType, entityType\n| project operationName, env_cloud_role, resultType, entityType, NumOfRequests, durationMs_50 = percentile_durationMs_50, durationMs_85 = percentile_durationMs_85, durationMs_90 = percentile_durationMs_90, durationMs_95 = percentile_durationMs_95, Cumulative\n| order by NumOfRequests desc\n| limit 1000"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          {
            "id": "d74dd13a-90d1-4144-8e4b-5dc5a777fd09",
            "ruleType": "colorByCondition",
            "applyToColumn": null,
            "hideText": false,
            "applyTo": "rows",
            "conditions": [
              {
                "operator": "!=",
                "column": "resultType",
                "values": [
                  "Success"
                ]
              }
            ],
            "chainingOperator": "and",
            "visualType": "table",
            "colorStyle": "light",
            "color": "red",
            "tag": "",
            "icon": null,
            "ruleName": ""
          }
        ],
        "colorRulesDisabled": false,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "d217a34c-df09-4779-a5f0-de5e44e040c4",
      "title": "Slow query caused by SQL app lock",
      "description": "",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 62,
        "width": 6,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics\n) where TIMESTAMP between(_startTime.._endTime) and organizationId in (cllgetorginfo)\nand sqlText startswith \"sp_getapplock\" and sqlText !has \"AuthorizationInitSpAppLock\"\n| extend entityName = extract(\"@Resource='(.+?)_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\", 1, sqlText)\n| extend executionTimeInSeconds = toint(executionTimeInMilliseconds / 1000)\n| summarize TotalCount = count() by entityName\n| order by TotalCount desc "
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "31afe609-e81c-485f-be8a-2289ed9e8155",
      "title": "App lock trend",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Applock entity",
      "visualType": "timechart",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 6,
        "y": 62,
        "width": 18,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "aplentity",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics\n) where TIMESTAMP between(_startTime.._endTime) and organizationId in (cllgetorginfo)\nand sqlText startswith \"sp_getapplock\" and sqlText !has \"AuthorizationInitSpAppLock\"\n// | where entityName has aplentity or isempty(aplentity)\n| extend executionTimeInSeconds = toint(executionTimeInMilliseconds / 1000)\n| extend entityName = extract(\"@Resource='(.+?)_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\", 1, sqlText)\n| where entityName == aplentity or isempty(aplentity)\n| summarize TotalCount = count() by bin(PreciseTimeStamp, totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": true,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "7930dced-f3cc-447d-9c45-e04cc5e144c6",
      "title": "App lock details",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Applock entity",
      "visualType": "table",
      "pageId": "a1fef0b8-1711-489f-b2db-02e556089f6b",
      "layout": {
        "x": 0,
        "y": 72,
        "width": 24,
        "height": 12
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "aplentity"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics\n) where TIMESTAMP between(_startTime.._endTime) and organizationId in (cllgetorginfo)\nand sqlText startswith \"sp_getapplock\" and sqlText !has \"AuthorizationInitSpAppLock\"\n// | where entityName has aplentity or isempty(aplentity)\n| extend executionTimeInSeconds = toint(executionTimeInMilliseconds / 1000)\n| extend entityName = extract(\"@Resource='(.+?)_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\", 1, sqlText)\n| where entityName == aplentity or isempty(aplentity)\n| extend entityGuid = extract(\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})\", 1, sqlText)\n| project TIMESTAMP, Role, executionTimeInSeconds, entityName, entityGuid, sqlText, cdsQueryHash, operationName, userId, commandTimeout, ActivityId, RequestId=reqId, executionId, transactionId, clientConnectionId, transactionIsolationLevel, sessionWaitStatistics, pack_, leadBlockingTransactionId, leadBlockingSpid\n// | extend hashChar = '#'\n| order by executionTimeInSeconds desc\n| limit 1000"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "1d680c18-cb2a-44a2-88c7-44916528a7c0",
      "title": "Organization details",
      "description": "",
      "visualType": "markdown",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 8,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "//Retrieve org Info\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| extend Version = strcat(tostring(MajorVersion),'.',tostring(MinorVersion),'.',tostring(BuildNumber),'.',tostring(Revision))\n| extend OrgType = case(Type == 0, \"Production\", Type == 4, \"Production\", Type == 5, \"Sandbox\", Type == 11, \"Email Trial\", Type == 6, \"Sandbox\", Type == 10, \"Support instance\", Type == 12, \"Default\", Type == 13, \"Developer\", Type == 14, \"Trial\", Type == 15, \"Teams\", \"NA\"\n)\n| extend Status = case(OrgStatus == 1, \"Enabled\", OrgStatus == 0, \"Disabled\", OrgStatus == 2, \"Pending\", OrgStatus == 3, \"Failed\", \"Maintenance\")\n// | project Geo, Datacenter, , , , , , , , , , , IsMultiGeo, IsCDS, UserCount, ScaleGroupId, SqlServerName, DatabaseName, Max_backup_time=BackupRetentionInDays, Version, FnoUrl, WavesEnabled\n| take 1\n| project Details = strcat(\n'**Tenant Id**: ', TenantId, \n'\\n\\n**Organization Id**: ', OrgId, \n'\\n\\n**UniqueName**: ', UniqueName,\n'\\n\\n**Environment ID**: ', BAPEnvironmentId,\n'\\n\\n**URL**: ', URL,\n'\\n\\n**Organization Type**: ',OrgType,\n'\\n\\n**FriendlyName**: ', FriendlyName,\n'\\n\\n**Status**: ', Status,\n'\\n\\n**Security Group ID**: ', SecurityGroupGUID)\n//\n//\n// Main script\n//Retrieve org Info\n// union \n// cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\n// cluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n// | where OrgId == orgid or isempty(orgid)\n// | where DomainName == domainname or isempty(domainname)\n// | where Geo == geo or isempty(geo)\n// | where BAPEnvironmentId == envid or isempty(envid)\n// | extend URL = case(\n// Geo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\n// Geo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\n// Geo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\n// Geo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\n// Geo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\n// Geo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\n// Geo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\n// Geo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\n// Geo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\n// strcat('https://', DomainName, '.crm15.dynamics.com')\n// )\n// | extend Version = strcat(tostring(MajorVersion),'.',tostring(MinorVersion),'.',tostring(BuildNumber),'.',tostring(Revision))\n// | project Geo, Datacenter, TenantId, DomainName, URL, OrgId, OrgType = case(Type == 0, \"Production\", Type == 4, \"Production\", Type == 5, \"Sandbox\", Type == 6, \"Sandbox\", Type == 10, \"Support instance\", Type == 12, \"Default\", Type == 13, \"Developer\", Type == 14, \"Trial\", Type == 15, \"Teams\", \"NA\"\n// ), EnvironmentID = BAPEnvironmentId, UniqueName, SecurityGroupGUID, FriendlyName, Status = case(OrgStatus == 1, \"Enabled\", OrgStatus == 0, \"Disabled\", OrgStatus == 2, \"Pending\", OrgStatus == 3, \"Failed\", \"Maintenance\"), IsMultiGeo, IsCDS, UserCount, ScaleGroupId, SqlServerName, DatabaseName, Max_backup_time=BackupRetentionInDays, Version, FnoUrl, WavesEnabled\n// | take 1"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "a4e87e15-7417-4d02-95c9-c53d483e09d6",
      "title": "Organization DB config details",
      "description": "",
      "visualType": "markdown",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 8,
        "y": 0,
        "width": 8,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "//Retrieve org Info\nlet cllorg =(['Retrieve org id']);\nlet que1 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| extend Version = strcat(tostring(MajorVersion),'.',tostring(MinorVersion),'.',tostring(BuildNumber),'.',tostring(Revision))\n| extend OrgType = case(Type == 0, \"Production\", Type == 4, \"Production\", Type == 5, \"Sandbox\", Type == 6, \"Sandbox\", Type == 10, \"Support instance\", Type == 12, \"Default\", Type == 13, \"Developer\", Type == 14, \"Trial\", Type == 15, \"Teams\", \"NA\"\n)\n| extend Status = case(OrgStatus == 1, \"Enabled\", OrgStatus == 0, \"Disabled\", OrgStatus == 2, \"Pending\", OrgStatus == 3, \"Failed\", \"Maintenance\")\n| extend merge=1\n| project IsMultiGeo, IsCDS,UserCount, SqlServerName,DatabaseName , Version, FnoUrl,BackupRetentionInDays, merge\n| take 1\n);\nlet que2 =  (\nunion\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationProperties,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationProperties\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrganizationID  in (cllorg) or isempty(orgid)\n| extend merge=1\n| project AdminOnlyMode,merge\n| take 1\n);\nque1\n| join kind=inner que2 on merge\n| project Details = strcat(\n'**MultiGeo enabled**: ', iff(IsMultiGeo=='true','Yes','No'), \n'\\n\\n**CDS Org**: ', iff(IsCDS=='true','Yes','No'), \n'\\n\\n**Admin only mode**: ', case(AdminOnlyMode=='0','Off;    **Background jobs**: On', AdminOnlyMode=='1','On;    **Background jobs**: On', AdminOnlyMode=='2','Off;    **Background jobs**: Off','On;    **Background jobs**: Off'),\n'\\n\\n**User Count**: ', UserCount,\n'\\n\\n**SQL Server Name**: ', SqlServerName,\n'\\n\\n**Database Name**: ', DatabaseName,\n'\\n\\n**Version**: ',Version,\n'\\n\\n**FnO Url**: ', FnoUrl,\n'\\n\\n**Max autobackup duration**: ', BackupRetentionInDays, ' days')"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "6ee8b9f6-3415-4960-954e-cc4b2124cd70",
      "title": "Datacenter and Scale group details",
      "description": "",
      "visualType": "markdown",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 16,
        "y": 0,
        "width": 8,
        "height": 8
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "//Retrieve org Info\nlet clltenant = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend AzureRegion = case(DCName == \"BN1\",\"eastus\",DCName == \"BY2\",\"westus\", DCName == \"AMS\",\"westeurope\",DCName == \"DB3\", \"northeurope\", DCName == \"HKN\",\"eastasia\", DCName == \"SG1\",\"southeastasia\", DCName == \"CPQ\",\"brazilsouth\", DCName==\"SN1\",\"southcentralus\", DCName == \"MEL\",\"australiasoutheast\", DCName==\"SYD\",\"australiaeast\", DCName == \"TYO\",\"japaneast\", DCName==\"OSA\",\"japanwest\", DCName == \"MAA\",\"southindia\", DCName==\"PNQ\",\"centralindia\", DCName == \"YTO\",\"canadacentral\", DCName==\"YQB\",\"canadaeast\", DCName == \"CWL\",\"ukwest\", DCName==\"LON\",\"uksouth\", DCName == \"FRC\",\"francecentral\", DCName==\"FRS\",\"francesouth\", DCName == \"UAN\",\"uaenorth\", DCName==\"UAC\",\"uaecentral\", DCName == \"SAN\",\"southafricanorth\", DCName==\"SAW\",\"southafricawest\", DCName == \"GEC\",\"germanywestcentral\", DCName==\"GEN\",\"germanynorth\", DCName == \"ZRH\",\"switzerlandnorth\", DCName==\"GVA\",\"switzerlandwest\", DCName == \"CKR\",\"koreacentral\", DCName==\"SKR\",\"koreasouth\", DCName == \"ENO\",\"norwayeast\", DCName==\"WNO\",\"norwaywest\", DCName == \"TP1\",\"eastus\", DCName==\"TP2\",\"westus\", \"Undefined\"), ScaleGroupId\n| take 1\n);\nlet clltenant2 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| where Geo == geo or isempty(geo)\n| project ScaleGroupId\n| take 1\n);\nlet que1 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").IslandDetails\n| where ScaleGroupId in (clltenant2)\n| extend merge=1\n| project IslandName, IslandNumber, KustoCluster, merge, ScaleGroupId\n| take 1\n);\nlet que2 = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ScalegroupDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ScalegroupDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where Id in (clltenant2)\n| extend merge=1\n| order by ScaleGroup, ScaleGroupType, TargetEdition, TierGroupName, AzureRegion, Geo\n| project ScaleGroup, ScaleGroupType, TargetEdition, TierGroupName, AzureRegion, Geo, Datacenter, merge\n// | take 1\n);\nque1\n| join kind=inner que2 on merge\n| project IslandName, IslandNumber, KustoCluster, ScaleGroup, ScaleGroupType, TargetEdition, TierGroupName, AzureRegion, Geo, Datacenter, ScaleGroupId\n| take 1\n| project Details = strcat(\n'**Geo**: ', Geo, \n'\\n\\n**Datacenter**: ', Datacenter, \n'\\n\\n**Azure Region**: ', AzureRegion,\n'\\n\\n**Scale Group**: ', ScaleGroup,\n'\\n\\n**Scale Group Type / Target type**: ', strcat(ScaleGroupType, ' / ', TargetEdition),\n'\\n\\n**Scale Group Id**: ', ScaleGroupId,\n'\\n\\n**Island Name / Tier Group Name**: ', strcat(IslandName, ' / ', TierGroupName),\n'\\n\\n**Island Number**: ', IslandNumber,\n'\\n\\n**Kusto Cluster**: ', KustoCluster)\n\n\n//main script\n// let clltenant = (\n// union \n// cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\n// cluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n// | where OrgId == orgid or isempty(orgid)\n// | where DomainName == domainname or isempty(domainname)\n// | where Geo == geo or isempty(geo)\n// | where BAPEnvironmentId == envid or isempty(envid)\n// | project AzureRegion = case(DCName == \"BN1\",\"eastus\",DCName == \"BY2\",\"westus\", DCName == \"AMS\",\"westeurope\",DCName == \"DB3\", \"northeurope\", DCName == \"HKN\",\"eastasia\", DCName == \"SG1\",\"southeastasia\", DCName == \"CPQ\",\"brazilsouth\", DCName==\"SN1\",\"southcentralus\", DCName == \"MEL\",\"australiasoutheast\", DCName==\"SYD\",\"australiaeast\", DCName == \"TYO\",\"japaneast\", DCName==\"OSA\",\"japanwest\", DCName == \"MAA\",\"southindia\", DCName==\"PNQ\",\"centralindia\", DCName == \"YTO\",\"canadacentral\", DCName==\"YQB\",\"canadaeast\", DCName == \"CWL\",\"ukwest\", DCName==\"LON\",\"uksouth\", DCName == \"FRC\",\"francecentral\", DCName==\"FRS\",\"francesouth\", DCName == \"UAN\",\"uaenorth\", DCName==\"UAC\",\"uaecentral\", DCName == \"SAN\",\"southafricanorth\", DCName==\"SAW\",\"southafricawest\", DCName == \"GEC\",\"germanywestcentral\", DCName==\"GEN\",\"germanynorth\", DCName == \"ZRH\",\"switzerlandnorth\", DCName==\"GVA\",\"switzerlandwest\", DCName == \"CKR\",\"koreacentral\", DCName==\"SKR\",\"koreasouth\", DCName == \"ENO\",\"norwayeast\", DCName==\"WNO\",\"norwaywest\", DCName == \"TP1\",\"eastus\", DCName==\"TP2\",\"westus\", \"Undefined\"), ScaleGroupId\n// | take 1\n// );\n// let clltenant2 = (\n// union \n// cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\n// cluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n// | where OrgId == orgid or isempty(orgid)\n// | where DomainName == domainname or isempty(domainname)\n// | where Geo == geo or isempty(geo)\n// | project ScaleGroupId\n// | take 1\n// );\n// let que1 = (\n// union \n// cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").IslandDetails\n// | where ScaleGroupId in (clltenant2)\n// | extend merge=1\n// | project IslandName, IslandNumber, KustoCluster, merge\n// | take 1\n// );\n// let que2 = (\n// union \n// cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").ScalegroupDetails,\n// cluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").ScalegroupDetails\n// | where Id in (clltenant2)\n// | extend merge=1\n// | order by ScaleGroup, ScaleGroupType, TargetEdition, TierGroupName, AzureRegion, Geo\n// | project ScaleGroup, ScaleGroupType, TargetEdition, TierGroupName, AzureRegion, Geo, Datacenter, merge\n// | take 1\n// );\n// que1\n// | join kind=inner que2 on merge\n// | project IslandName, IslandNumber, KustoCluster, ScaleGroup, ScaleGroupType, TargetEdition, TierGroupName, AzureRegion, Geo, Datacenter"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "e1f0ce06-2abf-42de-b37a-d9865263ba87",
      "title": "Failure count",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Plugin type name",
      "visualType": "table",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 10,
        "y": 0,
        "width": 14,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "plugintypename"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n//| where exceptionSource contains \"Plugin secure configuration\"\n//| where assemblyName contains \"SyncMusicMain\"\n//| where exceptionSource contains \"PluginExecution\"\n| where typeName contains plugintypename or isempty(plugintypename)\n| where component == \"Sandbox Client\"\n| where perceivedPassed == 0\n| summarize by executionId, assemblyName, typeName, fabricHostName, originalException, exceptionSource\n| summarize Totalcount = count() by exceptionSource, assemblyName, typeName\n// | summarize Totalcount = count(), TIMESTAMP = max(TIMESTAMP), executionId = max(exceptionSource) by executionId, assemblyName, typeName, fabricHostName, originalException\n| project assemblyName, typeName, exceptionSource, Totalcount"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "51315f37-5a74-44a4-8da4-5fe0a658e21f",
      "title": "Outbound call by correlation ID (contains fdisland)",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Correlation ID",
      "visualType": "table",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 83,
        "width": 24,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "corrid",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion\ncluster(\"https://fdislandsas.southeastasia.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsau.australiaeast.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandseu.westeurope.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsus.centralus.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsbr.brazilsouth.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsin.centralindia.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsfr.francecentral.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsjp.japaneast.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsuk.uksouth.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsza.southafricanorth.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsde.germanywestcentral.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents,\ncluster(\"https://fdislandsae.uaenorth.kusto.windows.net\").database(\"CAPAnalytics\").CommunicationEvents\n| where env_time between (_startTime.._endTime)\n| where organizationId in (cllgetorginfo)\n| where activityName == \"HttpOutboundCall\"\n| where correlationId == corrid or isempty(corrid)\n| extend target = tostring(todynamic(customDimensions).target)\n| summarize percentile(durationMs, 95) by bin(env_time, totimespan(interval)), target=tostring(target), correlationId"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "409a3f74-4e42-4142-993f-34c0f711b700",
      "title": "Failure trend",
      "description": "Filter:\n- Type name",
      "visualType": "timechart",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 12,
        "y": 20,
        "width": 12,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval",
          "plugintypename"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n//| where exceptionSource contains \"Plugin secure configuration\"\n//| where assemblyName contains \"SyncMusicMain\"\n//| where exceptionSource contains \"PluginExecution\"\n| where typeName contains plugintypename or isempty(plugintypename)\n| where component == \"Sandbox Client\"\n| where perceivedPassed == 0\n| summarize by executionId, exceptionSource, TIMESTAMP\n| summarize _=count() by Type=exceptionSource, bin(TIMESTAMP, totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "3e08e3c4-e5a9-4465-855e-5ab93d865502",
      "title": "Worker allocation request",
      "description": "",
      "visualType": "timechart",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 73,
        "width": 12,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "hstname",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nlet AssignedWorker = toscalar(\nSandboxGrpcExecutionStatsForOrg(_startTime, _endTime, toscalar(cllgetorginfo))\n| where workerMetadata !startswith \"CDS/OrganizationId\"\n| where assignedWorker != \"CDSRuntime.Sandbox/WorkerAllocator\"\n| extend WorkerService= substring(assignedWorker, 19, 50)\n| summarize make_set(WorkerService));\nFindIslandData('OperationEvents', _startTime, _endTime)\n| where activityName == 'SandboxFabricHost.HostExecute'\n| where organizationId in (cllgetorginfo)\n| where serviceName in (AssignedWorker)\n| where env_cloud_name == hstname or isempty(hstname)\n| extend customDim = todynamic(customDimensions)\n| extend typename = tostring(customDim.typeName)\n| extend\nactiveWorkerRequestsCount = toreal(customDim.activeWorkerRequestsCount),\nclientAppType= tostring(customDim.clientAppType)\n| summarize ExecutionVolume= count(), WorkerRequestsCount=max(activeWorkerRequestsCount)\nby bin(env_time, totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              {
                "id": "a7d1d2f1-aa66-4501-afc5-9ca30386235e",
                "value": 25
              }
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "79925442-8237-4dea-b24c-f60499cd7095",
      "title": "Outbound call",
      "description": "",
      "visualType": "timechart",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 12,
        "y": 73,
        "width": 12,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").FindIslandData('CommunicationEvents', _startTime, _endTime)\n| where activityName == \"HttpOutboundCall\"\n| where organizationId in (cllgetorginfo)\n| extend cd = todynamic(customDimensions)\n| extend\n    target = tostring(cd.target),\n    currentConnections = toint(cd.currentConnections),\n    maxConnectionLimit = toint(cd.maxConnectionLimit)\n| summarize\n    HTTPOutboundCall= count(),\n    max(currentConnections)\n    by bin(env_time, totimespan(interval))"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    },
    {
      "id": "a86b3567-5775-4cb3-b86c-1b156efa4ff4",
      "title": "Org lifecycle operations (DB cluster)",
      "description": "",
      "visualType": "table",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 54,
        "width": 24,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "parameter",
          "parameterId": "37fdfc20-4b5e-4fac-b23c-12745c587f35"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "let cllgetorginfo = (\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| project BAPEnvironmentId\n| take 1\n);\nBaprpEnvironmentLifecycleOperations(TraceEvents, _startTime, _endTime)\n| where sourceEnvironmentName in (cllgetorginfo) or targetEnvironmentName in (cllgetorginfo)\n| project TIMESTAMP, operationType, sourceEnvironmentName, targetEnvironmentName, ActivityId, correlationId, clientRequestId, clientSessionId, triggeredById, message"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "f927ebe0-fab9-4352-9410-13982fa20097",
      "title": "BAP details (DB cluster)",
      "description": "",
      "visualType": "table",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 65,
        "width": 24,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "parameter",
          "parameterId": "37fdfc20-4b5e-4fac-b23c-12745c587f35"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "corrid"
        ],
        "text": "BaprpFindLifecycleOperationStatus(lookupOperationId=corrid,_startTime,_endTime)"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "82c90283-d44e-436d-933d-04a222f1dd66",
      "title": "BAP debug (DB cluster)",
      "description": "",
      "visualType": "table",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 69,
        "width": 24,
        "height": 11
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "parameter",
          "parameterId": "37fdfc20-4b5e-4fac-b23c-12745c587f35"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "corrid"
        ],
        "text": "BaprpDebugCorrelationId(corrid,_startTime,_endTime)"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "3d7cfc5c-e689-4b9f-aa28-b6ec96ea8834",
      "title": "Check DAMS script result (run SQL script to database)",
      "description": "",
      "visualType": "table",
      "pageId": "407aa955-24cc-49ad-9624-1fb1840a460a",
      "layout": {
        "x": 0,
        "y": 4,
        "width": 24,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "parameter",
          "parameterId": "37fdfc20-4b5e-4fac-b23c-12745c587f35"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "jvisguid",
          "orgid",
          "sqlscrname"
        ],
        "text": "let cllorginfo=(\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| project OrgId\n| take 1\n);\nOperationEvents\n| where activityName == 'DAMS.AutoTuneExecuteScriptActivity'\n| where organizationId in (cllorginfo)\n| where env_time between (_startTime.._endTime)\n| where customDimensions has jvisguid or isempty(jvisguid)\n| where customDimensions has sqlscrname or isempty(sqlscrname)\n| extend cd = parse_json(customDimensions)\n| project env_time, correlationId, serviceRequestId, organizationId, ScriptResult = tostring(cd.ScriptResult), ScriptOutput = tostring(cd.ScriptOutput), customDimensions"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "ef5338c6-0507-4005-bd56-65bf1849d6f8",
      "title": "New tile",
      "hideTitle": true,
      "description": "",
      "visualType": "markdown",
      "pageId": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
      "layout": {
        "x": 0,
        "y": 50,
        "width": 24,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "let cllscaleid =(\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| project ScaleGroupId\n| take 1\n);\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").IslandDetails\n| where ScaleGroupId in (cllscaleid)\n| take 1\n| project Details = strcat('Pick this Data Source (DB cluster) before running below scripts: ', KustoCluster)"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "257376e5-7f2b-4b23-901b-c97a80b26b47",
      "title": "New tile",
      "hideTitle": true,
      "description": "",
      "visualType": "markdown",
      "pageId": "407aa955-24cc-49ad-9624-1fb1840a460a",
      "layout": {
        "x": 0,
        "y": 0,
        "width": 24,
        "height": 4
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "domainname",
          "envid",
          "geo",
          "orgid"
        ],
        "text": "let cllscaleid =(\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").OrganizationDetails\n| where TIMESTAMP between (_startTime.._endTime)\n| where OrgId == orgid or isempty(orgid)\n| where Geo == geo or isempty(geo)\n| where BAPEnvironmentId == envid or isempty(envid)\n| extend URL = case(\nGeo=='NA', strcat('https://', DomainName, '.crm.dynamics.com'),\nGeo=='LATAM/SAM', strcat('https://', DomainName, '.crm2.dynamics.com'),\nGeo=='CAN', strcat('https://', DomainName, '.crm3.dynamics.com'),\nGeo=='EMEA', strcat('https://', DomainName, '.crm4.dynamics.com'),\nGeo=='APAC', strcat('https://', DomainName, '.crm5.dynamics.com'),\nGeo=='OCE', strcat('https://', DomainName, '.crm6.dynamics.com'),\nGeo=='GER', strcat('https://', DomainName, '.crm16.dynamics.com'),\nGeo=='JPN', strcat('https://', DomainName, '.crm7.dynamics.com'),\nGeo=='IND', strcat('https://', DomainName, '.crm8.dynamics.com'),\nGeo=='UK', strcat('https://', DomainName, '.crm11.dynamics.com'),\nstrcat('https://', DomainName, '.crm15.dynamics.com')\n)\n| where DomainName == domainname or URL startswith domainname or URL startswith substring(domainname, 0, indexof(domainname, \".com\") + 4) or isempty(domainname)\n| project ScaleGroupId\n| take 1\n);\ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").IslandDetails\n| where ScaleGroupId in (cllscaleid)\n| take 1\n| project Details = strcat('Pick this Data Source (DB cluster) before running below scripts: ', KustoCluster)"
      },
      "visualOptions": {
        "xColumn": null
      }
    },
    {
      "id": "7fa857bd-edd9-43f4-8815-1f3d5eecc954",
      "title": "Failure analysis (APAC, NA orgs pick crmasyncprodcus; EMEA orgs pick crmasyncprodweu)",
      "description": "Require:\n- Organization ID\n- Correlation ID",
      "visualType": "table",
      "pageId": "2aba6666-45d2-4f33-97f4-1df4d6e6fe93",
      "layout": {
        "x": 0,
        "y": 33,
        "width": 24,
        "height": 10
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "parameter",
          "parameterId": "37fdfc20-4b5e-4fac-b23c-12745c587f35"
        },
        "usedVariables": [
          "_endTime",
          "_startTime",
          "corrid"
        ],
        "text": "TraceEvents\n    | where env_time between(_startTime .. _endTime)\n    | where correlationId == corrid\n    | project env_time, env_cloud_roleInstance, activityVector, activityName, traceLevel, message, customDimensions\n    | extend cd = parse_json(customDimensions)\n    | order by activityVector asc\n    | limit 5000"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "6c79aa92-1228-4033-974e-25afd602173a",
      "title": "Top execution count",
      "description": "Require:\n- Organization ID\n\nFilter:\n- System user ID\n- Agent name: Client who called the API\n- Request string",
      "visualType": "table",
      "pageId": "78e7ef7f-d006-4d23-9c47-356937db5550",
      "layout": {
        "x": 0,
        "y": 57,
        "width": 24,
        "height": 12
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "agentid",
          "agentname",
          "requeststring"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").WebRequestStatistics\n| where TIMESTAMP between (_startTime .. _endTime)\n| where OrganizationId in (cllgetorginfo)\n| where SystemUserId contains agentid or isempty(agentid)\n| where UserAgent contains agentname or isempty(agentname)\n| where Request contains requeststring or isempty(requeststring)\n// | where ClientId contains \"58c5dcd7-2c9a-475d-b35b-2f4fba9d3f9e\" or AADAppId contains \"58c5dcd7-2c9a-475d-b35b-2f4fba9d3f9e\" or AADObjectId contains \"58c5dcd7-2c9a-475d-b35b-2f4fba9d3f9e\"\n// | where UserAgent == \"CloudSSS\"\n// | where HttpMethod == \"PATCH\"\n// | project TIMESTAMP, RoleInstance, ActivityId, HttpMethod, Request, HttpStatus, EntityTypeCode, EntityName, PageType, QueuingTime, ExecutionTime, MultiOrgCacheLoadTotalMs, DatabaseServiceTotalMs, SqlTotalMs, SqlConnectionOpenTotalMs\n| extend Type=substring(HttpStatus,0,3)\n| summarize Count=count() by HttpMethod, Request, UserAgent, SystemUserId, ClientRequestId\n| top 50 by Count\n// | order by Count desc\n// // | where HttpStatus == \"400 Bad Request\"\n// // | summarize Count=count() by HttpStatus, Request\n// | take 50"
      },
      "visualOptions": {
        "table__enableRenderLinks": true,
        "colorRules": [
          
        ],
        "colorRulesDisabled": true,
        "colorStyle": "light",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ],
        "table__renderLinks": [
          
        ]
      }
    },
    {
      "id": "b0f18e5a-ecbe-4687-b5d6-4aa19c3ba938",
      "title": "Plugin execution count",
      "description": "Require:\n- Organization ID\n\nFilter:\n- Plugin type name",
      "visualType": "timechart",
      "pageId": "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
      "layout": {
        "x": 0,
        "y": 11,
        "width": 24,
        "height": 9
      },
      "query": {
        "kind": "inline",
        "dataSource": {
          "kind": "inline",
          "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
        },
        "usedVariables": [
          "Retrieve org id",
          "_endTime",
          "_startTime",
          "interval",
          "plugintypename"
        ],
        "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nunion \ncluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").SandboxExecutionAll\n| where TIMESTAMP between (_startTime .. _endTime)\n| where organizationId in (cllgetorginfo)\n| where typeName contains plugintypename or isempty(plugintypename)\n| where component == \"Sandbox Client\" \n| where perceivedPassed != 2\n|summarize TotalCount = count(), SuccessCount = countif(perceivedPassed==1),FailureCount = countif(perceivedPassed==0) by bin(TIMESTAMP, totimespan(interval)) \n"
      },
      "visualOptions": {
        "multipleYAxes": {
          "base": {
            "id": "-1",
            "label": "",
            "columns": [
              
            ],
            "yAxisMaximumValue": null,
            "yAxisMinimumValue": null,
            "yAxisScale": "linear",
            "horizontalLines": [
              
            ]
          },
          "additional": [
            
          ],
          "showMultiplePanels": false
        },
        "hideLegend": false,
        "xColumnTitle": "",
        "xColumn": null,
        "yColumns": null,
        "seriesColumns": null,
        "xAxisScale": "linear",
        "verticalLine": "",
        "crossFilterDisabled": false,
        "drillthroughDisabled": false,
        "crossFilter": [
          
        ],
        "drillthrough": [
          
        ]
      }
    }
  ],
  "parameters": [
    {
      "kind": "duration",
      "id": "7ea19103-6056-4bdd-a7be-97390fe0f43d",
      "displayName": "Time range",
      "description": "",
      "beginVariableName": "_startTime",
      "endVariableName": "_endTime",
      "defaultValue": {
        "kind": "dynamic",
        "count": 6,
        "unit": "hours"
      },
      "showOnPages": {
        "kind": "all"
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "a74ab576-c21c-462b-a62f-1c7ee3136b9f",
      "displayName": "Domain name",
      "variableName": "domainname",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "all"
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "ef5e35d7-7be6-4dd5-827a-45c71a159170",
      "displayName": "Organization ID",
      "variableName": "orgid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "all"
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "e240ff26-a6e6-4092-970d-3e08f5792299",
      "displayName": "Environment ID",
      "variableName": "envid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "all"
      }
    },
    {
      "kind": "string",
      "id": "8beba3b7-d88c-4e17-9ca9-f5898db1d4ac",
      "displayName": "GEO",
      "description": "",
      "variableName": "geo",
      "selectionType": "scalar",
      "includeAllOption": true,
      "defaultValue": {
        "kind": "all"
      },
      "dataSource": {
        "kind": "static",
        "values": [
          {
            "displayText": "APAC (CRM 5)",
            "value": "APAC"
          },
          {
            "displayText": "OCE (CRM 6)",
            "value": "OCE"
          },
          {
            "displayText": "JPN (CRM 7)",
            "value": "JPN"
          },
          {
            "displayText": "LATAM/SAM (CRM 2)",
            "value": "LATAM/SAM"
          },
          {
            "displayText": "CAN (CRM 3)",
            "value": "CAN"
          },
          {
            "displayText": "EMEA (CRM 4)",
            "value": "EMEA"
          },
          {
            "displayText": "IND (CRM 8)",
            "value": "IND"
          },
          {
            "displayText": "UK (CRM 11)",
            "value": "UK"
          },
          {
            "displayText": "UAE (CRM 15)",
            "value": "UAE"
          },
          {
            "displayText": "GER (CRM 16)",
            "value": "GER"
          },
          {
            "displayText": "NA/NAM (CRM)",
            "value": "NA"
          }
        ]
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "b282a68b-a1ef-4aa7-9473-d2dbf842e0c8",
      "displayName": "Ticket number",
      "variableName": "ticketid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "05fad66b-54b2-412f-a758-91fd4a066dab",
      "displayName": "Interval",
      "variableName": "interval",
      "description": "",
      "defaultValue": {
        "kind": "value",
        "value": "15m"
      },
      "showOnPages": {
        "kind": "all"
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "851261f3-b41a-41bc-a37e-d22dc099deed",
      "displayName": "Activity ID",
      "variableName": "activityid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "78e7ef7f-d006-4d23-9c47-356937db5550",
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93",
          "a1fef0b8-1711-489f-b2db-02e556089f6b",
          "3baeb1d7-1951-4307-b892-f515e9d2d0b5"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "a9c72c73-d69d-4eb5-ba80-796adbcf25d5",
      "displayName": "Table name",
      "variableName": "tablename",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "583abcd3-b159-482f-9f8a-349b013b7ceb",
          "3baeb1d7-1951-4307-b892-f515e9d2d0b5"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "228272b3-323d-4255-8967-52889c84697c",
      "displayName": "Request string",
      "variableName": "requeststring",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "78e7ef7f-d006-4d23-9c47-356937db5550",
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "22ee5c2f-8757-4d5c-8dce-5a788e060ed1",
      "displayName": "Plugin Type Name",
      "variableName": "plugintypename",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "dbcf039f-c0dd-4c0c-bf5c-89878274083f"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "878412d9-6b53-4827-b18f-06d6a61329eb",
      "displayName": "Correlation ID",
      "variableName": "corrid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93",
          "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "34a4ac12-fe7f-4d87-990c-8df0f352d5ac",
      "displayName": "Request ID",
      "variableName": "reqid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "dbcf039f-c0dd-4c0c-bf5c-89878274083f",
          "a1fef0b8-1711-489f-b2db-02e556089f6b",
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93",
          "78e7ef7f-d006-4d23-9c47-356937db5550"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "d4822b72-378a-43bf-877f-cc50796727cf",
      "displayName": "Execution ID",
      "variableName": "execuid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "dbcf039f-c0dd-4c0c-bf5c-89878274083f"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "badd2a90-53bd-4404-bc47-2a5539d2a948",
      "displayName": "Solution name",
      "variableName": "solutionname",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36"
        ]
      }
    },
    {
      "kind": "string",
      "id": "bcd9d19d-f72b-4b2c-9d25-a55904df15c5",
      "displayName": "Component type",
      "description": "",
      "variableName": "comptype",
      "selectionType": "scalar",
      "includeAllOption": true,
      "defaultValue": {
        "kind": "all"
      },
      "dataSource": {
        "kind": "static",
        "values": [
          {
            "value": "Entity"
          },
          {
            "value": "Attribute"
          },
          {
            "value": "Relationship"
          },
          {
            "value": "AttributePicklistValue"
          },
          {
            "value": "AttributeLookupValue"
          },
          {
            "value": "ViewAttribute"
          },
          {
            "value": "LocalizedLabel"
          },
          {
            "value": "RelationshipExtraCondition"
          },
          {
            "value": "OptionSet"
          },
          {
            "value": "EntityRelationship"
          },
          {
            "value": "EntityRelationshipRole"
          },
          {
            "value": "EntityRelationshipRelationships"
          },
          {
            "value": "ManagedProperty"
          },
          {
            "value": "EntityKey"
          },
          {
            "value": "Privilege"
          },
          {
            "value": "PrivilegeObjectTypeCode"
          },
          {
            "value": "Role"
          },
          {
            "value": "RolePrivilege"
          },
          {
            "value": "DisplayString"
          },
          {
            "value": "DisplayStringMap"
          },
          {
            "value": "Form"
          },
          {
            "value": "Organization"
          },
          {
            "value": "SavedQuery"
          },
          {
            "value": "Workflow"
          },
          {
            "value": "Report"
          },
          {
            "value": "ReportEntity"
          },
          {
            "value": "ReportCategory"
          },
          {
            "value": "ReportVisibility"
          },
          {
            "value": "Attachment"
          },
          {
            "value": "EmailTemplate"
          },
          {
            "value": "ContractTemplate"
          },
          {
            "value": "KBArticleTemplate"
          },
          {
            "value": "MailMergeTemplate"
          },
          {
            "value": "DuplicateRule"
          },
          {
            "value": "DuplicateRuleCondition"
          },
          {
            "value": "EntityMap"
          },
          {
            "value": "AttributeMap"
          },
          {
            "value": "RibbonCommand"
          },
          {
            "value": "RibbonContextGroup"
          },
          {
            "value": "RibbonCustomization"
          },
          {
            "value": "RibbonRule"
          },
          {
            "value": "RibbonTabToCommandMap"
          },
          {
            "value": "RibbonDiff"
          },
          {
            "value": "SavedQueryVisualization"
          },
          {
            "value": "SystemForm"
          },
          {
            "value": "WebResource"
          },
          {
            "value": "SiteMap"
          },
          {
            "value": "ConnectionRole"
          },
          {
            "value": "ComplexControl"
          },
          {
            "value": "FieldSecurityProfile"
          },
          {
            "value": "FieldPermission"
          },
          {
            "value": "PluginType"
          },
          {
            "value": "PluginAssembly"
          },
          {
            "value": "SDKMessageProcessingStep"
          },
          {
            "value": "SDKMessageProcessingStepImage"
          },
          {
            "value": "ServiceEndpoint"
          },
          {
            "value": "RoutingRule"
          },
          {
            "value": "RoutingRuleItem"
          },
          {
            "value": "SLA"
          },
          {
            "value": "SLAItem"
          },
          {
            "value": "ConvertRule"
          },
          {
            "value": "ConvertRuleItem"
          },
          {
            "value": "HierarchyRule"
          },
          {
            "value": "MobileOfflineProfile"
          },
          {
            "value": "MobileOfflineProfileItem"
          },
          {
            "value": "SimilarityRule"
          },
          {
            "value": "CustomControl"
          },
          {
            "value": "CustomControlDefaultConfig"
          },
          {
            "value": "DataSourceMapping"
          },
          {
            "value": "SDKMessage"
          },
          {
            "value": "SDKMessageFilter"
          },
          {
            "value": "SdkMessagePair"
          },
          {
            "value": "SdkMessageRequest"
          },
          {
            "value": "SdkMessageRequestField"
          },
          {
            "value": "SdkMessageResponse"
          },
          {
            "value": "SdkMessageResponseField"
          },
          {
            "value": "WebWizard"
          },
          {
            "value": "Index"
          },
          {
            "value": "ImportMap"
          },
          {
            "value": "CanvasApp"
          },
          {
            "value": "Connector"
          },
          {
            "value": "EnvironmentVariableDefinition"
          },
          {
            "value": "EnvironmentVariableValue"
          },
          {
            "value": "AIProjectType"
          },
          {
            "value": "AIProject"
          },
          {
            "value": "AIConfiguration"
          },
          {
            "value": "EntityAnalyticsConfiguration"
          },
          {
            "value": "AttributeImageConfiguration"
          },
          {
            "value": "EntityImageConfiguration"
          }
        ]
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "af9d6bec-c53e-4991-8128-2f091b287c7c",
      "displayName": "Object ID",
      "variableName": "obid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
          "9d63d3c9-215c-47b5-a8a6-8b566398694b",
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "4f990174-f5f9-4f52-a62a-c319c61c0b5c",
      "displayName": "Component name",
      "variableName": "compname",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36",
          "9d63d3c9-215c-47b5-a8a6-8b566398694b",
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "660abf35-5796-4e6c-b10e-360e761542fb",
      "displayName": "Component type code",
      "variableName": "comptypecode",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "32f934d2-8434-4b19-9495-b9f1087bffd1",
      "displayName": "Solution ID",
      "variableName": "solutionid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36"
        ]
      }
    },
    {
      "kind": "string",
      "id": "cb2396db-92b9-4b1e-b945-16d42c68422e",
      "displayName": "Layer type",
      "description": "",
      "variableName": "layertype",
      "selectionType": "scalar",
      "includeAllOption": false,
      "defaultValue": {
        "kind": "no-selection"
      },
      "dataSource": {
        "kind": "static",
        "values": [
          {
            "displayText": "Entity",
            "value": "executeentity"
          },
          {
            "displayText": "Optionset",
            "value": "executeoptionset"
          },
          {
            "displayText": "Entity relationship",
            "value": "executeentityrelationship"
          },
          {
            "displayText": "Lookup field",
            "value": "executelookupfield"
          }
        ]
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "502b52c7-822a-4aa0-92b6-dd65a8e2ec36"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "80ef1530-9dc7-44c2-a195-d9c362665088",
      "displayName": "Workflow ID",
      "variableName": "workflid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "9d63d3c9-215c-47b5-a8a6-8b566398694b"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "2971594c-7ed8-44d5-9a52-a298d12ed6a8",
      "displayName": "Queryhash",
      "variableName": "quehash",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "a1fef0b8-1711-489f-b2db-02e556089f6b"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "72b8829a-fcbf-46d8-9aaa-752e1c2ff878",
      "displayName": "SQL text",
      "variableName": "sqltxt",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "a1fef0b8-1711-489f-b2db-02e556089f6b"
        ]
      }
    },
    {
      "kind": "string",
      "id": "4180ff53-fee3-4681-960d-37c21876492f",
      "displayName": "Find by",
      "description": "",
      "variableName": "findby",
      "selectionType": "scalar",
      "includeAllOption": false,
      "defaultValue": {
        "kind": "no-selection"
      },
      "dataSource": {
        "kind": "static",
        "values": [
          {
            "displayText": "Queryhash",
            "value": "a1"
          },
          {
            "displayText": "Request ID",
            "value": "a2"
          },
          {
            "displayText": "SQL text",
            "value": "a3"
          }
        ]
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "a1fef0b8-1711-489f-b2db-02e556089f6b"
        ]
      }
    },
    {
      "kind": "string",
      "id": "478e5064-9864-4916-968f-727f214be5eb",
      "displayName": "Event type",
      "description": "",
      "variableName": "evtype",
      "selectionType": "scalar",
      "includeAllOption": false,
      "defaultValue": {
        "kind": "no-selection"
      },
      "dataSource": {
        "kind": "static",
        "values": [
          {
            "displayText": "Create",
            "value": "BPOCreateCompleted"
          },
          {
            "displayText": "Delete",
            "value": "BPODeleteCompleted"
          },
          {
            "displayText": "Update",
            "value": "BPOUpdateCompleted"
          },
          {
            "displayText": "Retrieve",
            "value": "BPORetrieveCompleted"
          },
          {
            "displayText": "Disassociate",
            "value": "BPODisassociateCompleted"
          },
          {
            "displayText": "MultipleDelete",
            "value": "BPOMultipleDeleteCompleted"
          },
          {
            "displayText": "MultipleRetrieve",
            "value": "BPOMultipleRetrieveCompleted"
          }
        ]
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "5d7a3746-7a87-4721-bfcf-5b7ab0696148",
      "displayName": "System user ID",
      "variableName": "agentid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "78e7ef7f-d006-4d23-9c47-356937db5550"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "399ade63-e49d-44a8-b582-213b78f3b5e3",
      "displayName": "Agent name",
      "variableName": "agentname",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "78e7ef7f-d006-4d23-9c47-356937db5550"
        ]
      }
    },
    {
      "kind": "string",
      "id": "f5e775b0-fb8f-4f98-9390-917ce51492c0",
      "displayName": "Applock entity",
      "description": "",
      "variableName": "aplentity",
      "selectionType": "scalar",
      "includeAllOption": true,
      "defaultValue": {
        "kind": "all"
      },
      "dataSource": {
        "kind": "query",
        "columns": {
          "value": "entityName"
        },
        "query": {
          "kind": "inline",
          "dataSource": {
            "kind": "inline",
            "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
          },
          "usedVariables": [
            "Retrieve org id",
            "_endTime",
            "_startTime"
          ],
          "text": "let cllgetorginfo = (\n['Retrieve org id']\n);\nfind in (\n  cluster(\"https://crmanacus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmanaweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodcus.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics,\ncluster(\"https://crmasyncprodweu.kusto.windows.net\").database(\"CRMAnalytics\").DBSlowQueryDiagnostics\n) where TIMESTAMP between(_startTime.._endTime) and organizationId in (cllgetorginfo)\nand sqlText startswith \"sp_getapplock\" and sqlText !has \"AuthorizationInitSpAppLock\"\n| extend entityName = extract(\"@Resource='(.+?)_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\", 1, sqlText)\n| extend executionTimeInSeconds = toint(executionTimeInMilliseconds / 1000)\n| summarize TotalCount = count() by entityName\n| project entityName"
        },
        "autoReset": true
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "a1fef0b8-1711-489f-b2db-02e556089f6b"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "f79ed929-c985-4413-a35f-ad3834d5a792",
      "displayName": "Host name",
      "variableName": "hstname",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "dbcf039f-c0dd-4c0c-bf5c-89878274083f"
        ]
      }
    },
    {
      "kind": "dataSource",
      "id": "37fdfc20-4b5e-4fac-b23c-12745c587f35",
      "displayName": "Data source (DB cluster)",
      "description": "",
      "defaultValue": {
        "kind": "dataSource",
        "dataSourceId": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a"
      },
      "dataSource": {
        "kind": "dataSource",
        "values": {
          "kind": "all"
        }
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0",
          "407aa955-24cc-49ad-9624-1fb1840a460a",
          "2aba6666-45d2-4f33-97f4-1df4d6e6fe93"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "5abd9590-9317-41fd-b77c-8cfe5bff2d83",
      "displayName": "Javis GUID",
      "variableName": "jvisguid",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "407aa955-24cc-49ad-9624-1fb1840a460a"
        ]
      }
    },
    {
      "kind": "string",
      "selectionType": "freetext",
      "id": "e03c8fb0-101d-4c9e-8d76-a56746bcad61",
      "displayName": "SQL script name",
      "variableName": "sqlscrname",
      "description": "",
      "defaultValue": {
        "kind": "all"
      },
      "showOnPages": {
        "kind": "selection",
        "pageIds": [
          "407aa955-24cc-49ad-9624-1fb1840a460a"
        ]
      }
    }
  ],
  "dataSources": [
    {
      "id": "5bd9fbcb-4e26-41b9-84d7-335352f64c6a",
      "name": "CRMAnalytics",
      "scopeId": "kusto",
      "clusterUri": "https://crmanacus.kusto.windows.net/",
      "database": "CRMAnalytics",
      "kind": "manual-kusto"
    },
    {
      "id": "6eb828fd-1b60-4408-bf0f-6b10719211b8",
      "name": "crmasyncprodcus",
      "clusterUri": "https://crmasyncprodcus.kusto.windows.net/",
      "database": "CRMAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "fe9296f9-844c-4f21-8a46-db8d12d89f3f",
      "name": "fdislandsas.southeastasia",
      "clusterUri": "https://fdislandsas.southeastasia.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "39f55ae9-4673-486f-91b1-0883d4698162",
      "name": "fdislandsau",
      "clusterUri": "https://fdislandsau.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "b34f4f2a-6e7f-42aa-89fe-bddd3b1cd00d",
      "name": "fdislandseu",
      "clusterUri": "https://fdislandseu.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "0f4d8586-fd55-4309-8635-c8efd313a3a7",
      "name": "fdislandsus.centralus",
      "clusterUri": "https://fdislandsus.centralus.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "c4fb0fb6-304f-4263-8846-8819e4aa933e",
      "name": "fdislandsca.canadacentral",
      "clusterUri": "https://fdislandsca.canadacentral.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "833b0ceb-80be-4135-b3f9-33e4e421ddd5",
      "name": "fdislandsbr.brazilsouth",
      "clusterUri": "https://fdislandsbr.brazilsouth.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "ae80960b-1150-4615-a10f-409200a4425a",
      "name": "fdislandsin.centralindia",
      "clusterUri": "https://fdislandsin.centralindia.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "a96dbfdf-0aab-48b6-802c-3d38289ca60c",
      "name": "fdislandsfr.francecentral",
      "clusterUri": "https://fdislandsfr.francecentral.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "b339e46b-e958-45c5-9177-eba504444f80",
      "name": "fdislandsjp.japaneast",
      "clusterUri": "https://fdislandsjp.japaneast.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "648ac109-ebc4-4951-b328-d97fc97fffed",
      "name": "fdislandsau.australiaeast",
      "clusterUri": "https://fdislandsau.australiaeast.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "aa8081cb-82ad-4e0e-a600-9591de2d29bb",
      "name": "fdislandsuk.uksouth",
      "clusterUri": "https://fdislandsuk.uksouth.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "7eec8afd-2cd5-4b08-b80b-2ba410eb6fa2",
      "name": "fdislandsza.southafricanorth",
      "clusterUri": "https://fdislandsza.southafricanorth.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "ef829930-7825-42e1-89b0-8c1066951ec9",
      "name": "fdislandsde.germanywestcentral",
      "clusterUri": "https://fdislandsde.germanywestcentral.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "37141b39-3c0b-46cd-9e91-f25f91f70db8",
      "name": "fdislandsae.uaenorth",
      "clusterUri": "https://fdislandsae.uaenorth.kusto.windows.net/",
      "database": "CAPAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    },
    {
      "id": "0663ceea-631b-4857-9c57-3914e45900ec",
      "name": "crmasyncprodweu",
      "clusterUri": "https://crmasyncprodweu.kusto.windows.net/",
      "database": "CRMAnalytics",
      "kind": "manual-kusto",
      "scopeId": "kusto"
    }
  ],
  "pages": [
    {
      "name": "Organization details",
      "id": "bcea7fec-63eb-4c0f-a4fc-54d7fbf8b8f0"
    },
    {
      "name": "API investigation",
      "id": "78e7ef7f-d006-4d23-9c47-356937db5550"
    },
    {
      "name": "Async investigation",
      "id": "081a67ae-5ae1-4b1a-9c6e-30af07b0df15"
    },
    {
      "name": "Plugin investigation",
      "id": "dbcf039f-c0dd-4c0c-bf5c-89878274083f"
    },
    {
      "name": "Process investigation",
      "id": "9d63d3c9-215c-47b5-a8a6-8b566398694b"
    },
    {
      "name": "Solution operation",
      "id": "502b52c7-822a-4aa0-92b6-dd65a8e2ec36"
    },
    {
      "name": "DB investigation",
      "id": "a1fef0b8-1711-489f-b2db-02e556089f6b"
    },
    {
      "name": "Trace log",
      "id": "2aba6666-45d2-4f33-97f4-1df4d6e6fe93"
    },
    {
      "name": "Storage",
      "id": "583abcd3-b159-482f-9f8a-349b013b7ceb"
    },
    {
      "name": "Javis",
      "id": "407aa955-24cc-49ad-9624-1fb1840a460a"
    },
    {
      "name": "Links & Tools",
      "id": "0728c15b-7dc1-4bb5-9f8d-98e242d326cd"
    }
  ]
} 
